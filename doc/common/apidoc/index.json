{
    "accordion": {
        "description": "Accordion groups a collection of contents in tabs.\n\n[Live Demo](https://www.primevue.org/accordion/)",
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "AccordionClickEvent": {
                    "description": "Custom tab open event.",
                    "relatedProp": "tab-open",
                    "props": [
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Opened tab index."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "MouseEvent",
                            "default": "",
                            "description": "Browser mouse event."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "AccordionTabOpenEvent"
                },
                "AccordionEmits": {
                    "description": "Defines valid emits in Acordion component.",
                    "relatedProp": "",
                    "props": [],
                    "methods": [
                        {
                            "name": "tab-click",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "AccordionClickEvent",
                                    "description": "Custom tab click event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when an active tab is clicked."
                        },
                        {
                            "name": "tab-close",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "AccordionTabCloseEvent",
                                    "description": "Custom tab close event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when an active tab is collapsed by clicking on the header."
                        },
                        {
                            "name": "tab-open",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "AccordionTabOpenEvent",
                                    "description": "Custom tab open event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a tab gets expanded."
                        },
                        {
                            "name": "update:activeIndex",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "undefined | number",
                                    "description": "Index of new active tab."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the active tab changes."
                        }
                    ]
                },
                "AccordionProps": {
                    "description": "Defines valid properties in AccordionTab component.",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "activeIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number | number[]",
                            "default": "null",
                            "description": "Index of the active tab or an array of indexes in multiple mode."
                        },
                        {
                            "name": "collapseIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "pi pi-chevron-down",
                            "description": "Icon of an expanded tab."
                        },
                        {
                            "name": "expandIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "pi pi-chevron-right",
                            "description": "Icon of a collapsed tab."
                        },
                        {
                            "name": "lazy",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "false",
                            "description": "When enabled, hidden tabs are not rendered at all. Defaults to false that hides tabs with css."
                        },
                        {
                            "name": "multiple",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "false",
                            "description": "When enabled, multiple tabs can be activated at the same time."
                        },
                        {
                            "name": "selectOnFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "false",
                            "description": "When enabled, the focused tab is activated."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "0",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "AccordionSlots": {
                    "description": "Defines valid slots in Acordion slots.",
                    "relatedProp": "",
                    "props": [],
                    "methods": [
                        {
                            "name": "default",
                            "parameters": [],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Default slot to detect AccordionTab components."
                        }
                    ]
                },
                "AccordionTabCloseEvent": {
                    "description": "Custom tab close event.",
                    "relatedProp": "tab-close",
                    "props": [
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Opened tab index."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "MouseEvent",
                            "default": "",
                            "description": "Browser mouse event."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "AccordionTabOpenEvent"
                },
                "AccordionTabOpenEvent": {
                    "description": "Custom tab open event.",
                    "relatedProp": "tab-open",
                    "props": [
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Opened tab index."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "MouseEvent",
                            "default": "",
                            "description": "Browser mouse event."
                        }
                    ],
                    "methods": [],
                    "extendedBy": "AccordionTabCloseEvent,AccordionClickEvent"
                }
            }
        }
    },
    "accordiontab": {
        "description": "Accordion groups a collection of contents in tabs.\n\n[Live Demo](https://www.primevue.org/accordion/)",
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "AccordionTabEmits": {
                    "description": "Defines valid emits in Acordion component.",
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                },
                "AccordionTabProps": {
                    "description": "Defines valid properties in AccordionTab component.",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "contentClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the tab content."
                        },
                        {
                            "name": "contentProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to the tab content."
                        },
                        {
                            "name": "contentStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the tab content."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the tab is disabled."
                        },
                        {
                            "name": "header",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Orientation of tab headers."
                        },
                        {
                            "name": "headerActionProps",
                            "optional": true,
                            "readonly": false,
                            "type": "AnchorHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLAnchorElement to the focusable anchor element inside the tab header."
                        },
                        {
                            "name": "headerClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the tab header."
                        },
                        {
                            "name": "headerProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to the tab header."
                        },
                        {
                            "name": "headerStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the tab header."
                        }
                    ],
                    "methods": []
                },
                "AccordionTabSlots": {
                    "description": "Defines valid slots in Acordion slots.",
                    "relatedProp": "",
                    "props": [],
                    "methods": [
                        {
                            "name": "default",
                            "parameters": [],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Default slot for content."
                        },
                        {
                            "name": "header",
                            "parameters": [],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Custom content for the title section of a panel is defined using the header template."
                        }
                    ]
                }
            }
        }
    },
    "api/Api": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "FilterMatchModeOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "BETWEEN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CONTAINS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DATE_AFTER",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DATE_BEFORE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DATE_IS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DATE_IS_NOT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ENDS_WITH",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "EQUALS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "GREATER_THAN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "GREATER_THAN_OR_EQUAL_TO",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "IN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "LESS_THAN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "LESS_THAN_OR_EQUAL_TO",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "NOT_CONTAINS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "NOT_EQUALS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "STARTS_WITH",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "FilterOperatorOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "AND",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "OR",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "PrimeIconsOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "ALIGN_CENTER",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ALIGN_JUSTIFY",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ALIGN_LEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ALIGN_RIGHT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "AMAZON",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ANDROID",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ANGLE_DOUBLE_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ANGLE_DOUBLE_LEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ANGLE_DOUBLE_RIGHT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ANGLE_DOUBLE_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ANGLE_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ANGLE_LEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ANGLE_RIGHT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ANGLE_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "APPLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_A",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_CIRCLE_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_CIRCLE_LEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_CIRCLE_RIGHT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_CIRCLE_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_DOWN_LEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_DOWN_RIGHT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_H",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_LEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_RIGHT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_RIGHT_ARROW_LEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_UP_LEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_UP_RIGHT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ARROW_V",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "AT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BACKWARD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BAN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BARS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BELL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BITCOIN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BOLT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BOOK",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BOOKMARK",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BOOKMARK_FILL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BOX",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BRIEFCASE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "BUILDING",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CALCULATOR",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CALENDAR",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CALENDAR_MINUS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CALENDAR_PLUS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CALENDAR_TIMES",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CAMERA",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CAR",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CARET_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CARET_LEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CARET_RIGHT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CARET_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CART_PLUS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHART_BAR",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHART_LINE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHART_PIE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHECK",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHECK_CIRCLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHECK_SQUARE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHEVRON_CIRCLE_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHEVRON_CIRCLE_LEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHEVRON_CIRCLE_RIGHT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHEVRON_CIRCLE_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHEVRON_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHEVRON_LEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHEVRON_RIGHT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CHEVRON_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CIRCLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CIRCLE_FILL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CLOCK",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CLONE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CLOUD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CLOUD_DOWNLOAD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CLOUD_UPLOAD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CODE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "COG",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "COMMENT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "COMMENTS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "COMPASS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "COPY",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "CREDIT_CARD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DATABASE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DELETELEFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DESKTOP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DIRECTIONS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DIRECTIONS_ALT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DISCORD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DOLLAR",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "DOWNLOAD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "EJECT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ELLIPSIS_H",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ELLIPSIS_V",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ENVELOPE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ERASER",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "EURO",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "EXCLAMATION_CIRCLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "EXCLAMATION_TRIANGLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "EXTERNAL_LINK",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "EYE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "EYE_SLASH",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FACEBOOK",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FAST_BACKWARD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FAST_FORWARD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FILE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FILE_EDIT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FILE_EXCEL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FILE_EXPORT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FILE_IMPORT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FILE_PDF",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FILE_WORD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FILTER",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FILTER_FILL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FILTER_SLASH",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FLAG",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FLAG_FILL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FOLDER",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FOLDER_OPEN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "FORWARD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "GIFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "GITHUB",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "GLOBE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "GOOGLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "HASHTAG",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "HEART",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "HEART_FILL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "HISTORY",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "HOME",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "HOURGLASS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "ID_CARD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "IMAGE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "IMAGES",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "INBOX",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "INFO",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "INFO_CIRCLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "INSTAGRAM",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "KEY",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "LANGUAGE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "LINK",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "LINKEDIN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "LIST",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "LOCK",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "LOCK_OPEN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "MAP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "MAP_MARKER",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "MEGAPHONE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "MICREPHONE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "MICROSOFT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "MINUS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "MINUS_CIRCLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "MOBILE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "MONEY_BILL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "MOON",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PALETTE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PAPERCLIP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PAUSE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PAYPAL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PENCIL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PERCENTAGE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PHONE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PLAY",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PLUS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PLUS_CIRCLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "POUND",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "POWER_OFF",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PRIME",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "PRINT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "QRCODE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "QUESTION",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "QUESTION_CIRCLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "REDDIT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "REFRESH",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "REPLAY",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "REPLY",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SAVE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SEARCH",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SEARCH_MINUS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SEARCH_PLUS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SEND",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SERVER",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SHARE_ALT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SHIELD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SHOPPING_BAG",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SHOPPING_CART",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SIGN_IN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SIGN_OUT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SITEMAP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SLACK",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SLIDERS_H",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SLIDERS_V",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_ALPHA_ALT_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_ALPHA_ALT_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_ALPHA_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_ALPHA_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_ALT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_ALT_SLASH",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_AMOUNT_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_AMOUNT_DOWN_ALT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_AMOUNT_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_AMOUNT_UP_ALT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_NUMERIC_ALT_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_NUMERIC_ALT_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_NUMERIC_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_NUMERIC_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SORT_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SPINNER",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "STAR",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "STAR_FILL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "STEP_BACKWARD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "STEP_BACKWARD_ALT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "STEP_FORWARD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "STEP_FORWARD_ALT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "STOP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "STOPWATCH",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "STOP_CIRCLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SUN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SYNC",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TABLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TABLET",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TAG",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TAGS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TELEGRAM",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "THUMBS_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "THUMBS_DOWN_FILL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "THUMBS_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "THUMBS_UP_FILL",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TH_LARGE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TICKET",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TIMES",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TIMES_CIRCLE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TRASH",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TRUCK",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "TWITTER",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "UNDO",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "UNLOCK",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "UPLOAD",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "USER",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "USERS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "USER_EDIT",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "USER_MINUS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "USER_PLUS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "VERIFIED",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "VIDEO",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "VIMEO",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "VOLUME_DOWN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "VOLUME_OFF",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "VOLUME_UP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "WALLET",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "WHATSAPP",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "WIFI",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "WINDOW_MAXIMIZE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "WINDOW_MINIMIZE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "WRENCH",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "YOUTUBE",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "ToastSeverityOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "ERROR",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "INFO",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "SUCCESS",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "WARN",
                            "optional": false,
                            "readonly": true,
                            "type": "string",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        }
    },
    "autocomplete/AutoComplete": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "AutoCompleteChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected option value"
                        }
                    ],
                    "methods": []
                },
                "AutoCompleteCompleteEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "query",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Value to search with"
                        }
                    ],
                    "methods": []
                },
                "AutoCompleteDropdownClickEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "MouseEvent",
                            "default": "",
                            "description": "Browser mouse event"
                        },
                        {
                            "name": "query",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Current value of the input field"
                        }
                    ],
                    "methods": []
                },
                "AutoCompleteItemSelectEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected item"
                        }
                    ],
                    "methods": [],
                    "extendedBy": "AutoCompleteItemUnselectEvent"
                },
                "AutoCompleteItemUnselectEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected item"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "AutoCompleteItemSelectEvent"
                },
                "AutoCompleteProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "AutoCompleteAppendTo",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached.\nSpecial keywords are 'body' for document body and 'self' for the element itself."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "autoHighlight",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": ""
                        },
                        {
                            "name": "autoOptionFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to focus on the first visible or selected element when the overlay panel is shown.\nDefault value is true."
                        },
                        {
                            "name": "completeOnFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to run a query when input receives focus."
                        },
                        {
                            "name": "dataKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "A property to uniquely identify an option."
                        },
                        {
                            "name": "delay",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Delay between keystrokes to wait before sending a query.\nDefault value is 300."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "dropdown",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Displays a button next to the input field when enabled."
                        },
                        {
                            "name": "dropdownClass",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the dropdown button."
                        },
                        {
                            "name": "dropdownIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the dropdown.\nDefault value is 'pi pi-chevron-down'."
                        },
                        {
                            "name": "dropdownMode",
                            "optional": true,
                            "readonly": false,
                            "type": "AutoCompleteDropdownMode",
                            "default": "",
                            "description": "Specifies the behavior dropdown button. Default 'blank' mode sends an empty string and 'current' mode sends the input value."
                        },
                        {
                            "name": "emptySearchMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to display when filtering does not return any results. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No results found'."
                        },
                        {
                            "name": "emptySelectionMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when any option is not selected. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No selected item'."
                        },
                        {
                            "name": "field",
                            "optional": true,
                            "readonly": false,
                            "type": "AutoCompleteFieldType",
                            "default": "",
                            "description": ""
                        },
                        {
                            "name": "forceSelection",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, autocomplete clears the manual input if it does not match of the suggestions to force only accepting values from the suggestions."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "loadingIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in loading state.\nDefault value is 'pi pi-spinner pi-spin'."
                        },
                        {
                            "name": "minLength",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Minimum number of characters to initiate a search.\nDefault value is 1."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "multiple",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Specifies if multiple values can be selected."
                        },
                        {
                            "name": "optionDisabled",
                            "optional": true,
                            "readonly": false,
                            "type": "AutoCompleteOptionDisabledType",
                            "default": "",
                            "description": "Property name or getter function to use as the disabled flag of an option, defaults to false when not defined."
                        },
                        {
                            "name": "optionGroupChildren",
                            "optional": true,
                            "readonly": false,
                            "type": "AutoCompleteOptionChildrenType",
                            "default": "",
                            "description": "Property name or getter function that refers to the children options of option group."
                        },
                        {
                            "name": "optionGroupLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "AutoCompleteOptionLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an option group."
                        },
                        {
                            "name": "optionLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "AutoCompleteOptionLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an option."
                        },
                        {
                            "name": "panelClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the overlay panel."
                        },
                        {
                            "name": "panelProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to the overlay panel inside the component."
                        },
                        {
                            "name": "panelStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the overlay panel."
                        },
                        {
                            "name": "placeholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Default text to display when no option is selected."
                        },
                        {
                            "name": "removeTokenIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in chip remove action.\nDefault value is 'pi pi-times-circle'."
                        },
                        {
                            "name": "scrollHeight",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Maximum height of the suggestions panel.\nDefault value is '200px'."
                        },
                        {
                            "name": "searchLocale",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Locale to use in searching. The default locale is the host environment's current locale."
                        },
                        {
                            "name": "searchMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when filtering returns any results. Defaults to value from PrimeVue locale configuration.\nDefault value is '{0} results are available'."
                        },
                        {
                            "name": "selectOnFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, the focused option is selected.\nDefault value is false."
                        },
                        {
                            "name": "selectionMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when options are selected. Defaults to value from PrimeVue locale configuration.\nDefault value is '{0} items selected'."
                        },
                        {
                            "name": "suggestions",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "An array of suggestions to display."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        },
                        {
                            "name": "virtualScrollerOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "VirtualScrollerProps",
                            "default": "",
                            "description": "Whether to use the virtualScroller feature. The properties of VirtualScroller component can be used like an object in it."
                        }
                    ],
                    "methods": []
                },
                "AutoCompleteSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "chip",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "content",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "empty",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "loader",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "option",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "optiongroup",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "AutoCompleteEmits": {
                    "values": "{\n    \"before-hide\": \"Function, \",\n    \"before-show\": \"Function, \",\n    \"blur\": \"Function, \",\n    \"change\": \"Function, \",\n    \"clear\": \"Function, \",\n    \"complete\": \"Function, \",\n    \"dropdown-click\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"hide\": \"Function, \",\n    \"item-select\": \"Function, \",\n    \"item-unselect\": \"Function, \",\n    \"show\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "avatar/Avatar": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "AvatarProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "icon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines the icon to display."
                        },
                        {
                            "name": "image",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines the image to display."
                        },
                        {
                            "name": "label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines the text to display."
                        },
                        {
                            "name": "shape",
                            "optional": true,
                            "readonly": false,
                            "type": "AvatarShapeType",
                            "default": "",
                            "description": "Shape of the element, valid options are 'square' and 'circle'."
                        },
                        {
                            "name": "size",
                            "optional": true,
                            "readonly": false,
                            "type": "AvatarSizeType",
                            "default": "",
                            "description": "Size of the element, valid options are 'normal', 'large' and 'xlarge'."
                        }
                    ],
                    "methods": []
                },
                "AvatarSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "AvatarEmits": {
                    "values": "{\n    \"error\": \"Function, \"\n}"
                }
            }
        }
    },
    "avatargroup/AvatarGroup": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "AvatarGroupProps": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                },
                "AvatarGroupSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "AvatarGroupEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "badge/Badge": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "BadgeProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "severity",
                            "optional": true,
                            "readonly": false,
                            "type": "BadgeSeverityType",
                            "default": "",
                            "description": "Severity type of the badge."
                        },
                        {
                            "name": "size",
                            "optional": true,
                            "readonly": false,
                            "type": "BadgeSizeType",
                            "default": "",
                            "description": "Size of the badge, valid options are 'large' and 'xlarge'."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value to display inside the badge."
                        }
                    ],
                    "methods": []
                },
                "BadgeSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "BadgeEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "badgedirective/BadgeDirective": {},
    "blockui/BlockUI": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "BlockUIProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "autoZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to automatically manage layering.\nDefault value is true."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "blocked",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Controls the blocked state."
                        },
                        {
                            "name": "fullScreen",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, the whole document gets blocked."
                        }
                    ],
                    "methods": []
                },
                "BlockUISlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "BlockUIEmits": {
                    "values": "{\n    \"block\": \"Function, \",\n    \"unblock\": \"Function, \"\n}"
                }
            }
        }
    },
    "breadcrumb/Breadcrumb": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "BreadcrumbProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying menu element."
                        },
                        {
                            "name": "exact",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to apply 'router-link-active-exact' class if route exactly matches the item path.\nDefault value is true."
                        },
                        {
                            "name": "home",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem",
                            "default": "",
                            "description": "Configuration for the home icon."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "An array of menuitems."
                        }
                    ],
                    "methods": []
                },
                "BreadcrumbSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "BreadcrumbEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "button/Button": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ButtonProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "badge",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Value of the badge."
                        },
                        {
                            "name": "badgeClass",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the badge."
                        },
                        {
                            "name": "class",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the button."
                        },
                        {
                            "name": "icon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Name of the icon."
                        },
                        {
                            "name": "iconClass",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the icon."
                        },
                        {
                            "name": "iconPos",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonIconPosType",
                            "default": "",
                            "description": "Position of the icon, valid values are 'left', 'right', 'bottom' and 'top'.\nDefault value is 'left'."
                        },
                        {
                            "name": "label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text of the button."
                        },
                        {
                            "name": "loading",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the button is in loading state."
                        },
                        {
                            "name": "loadingIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in loading state.\nDefault value is 'pi pi-spinner pi-spin'."
                        },
                        {
                            "name": "style",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the button."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "ButtonHTMLAttributes"
                },
                "ButtonSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ButtonEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "calendar/Calendar": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "CalendarBlurEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Input value"
                        }
                    ],
                    "methods": []
                },
                "CalendarMonthChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "month",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "New month."
                        },
                        {
                            "name": "year",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "New year."
                        }
                    ],
                    "methods": []
                },
                "CalendarProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "CalendarAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are 'body' for document body and 'self' for the element itself."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "autoZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to automatically manage layering.\nDefault value is true."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "dateFormat",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Format of the date. Defaults to PrimeVue Locale configuration."
                        },
                        {
                            "name": "decrementIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to show in each of the decrement buttons.\nDefault value is 'pi pi-chevron-down'."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "disabledDates",
                            "optional": true,
                            "readonly": false,
                            "type": "Date[]",
                            "default": "",
                            "description": "Array with dates to disable."
                        },
                        {
                            "name": "disabledDays",
                            "optional": true,
                            "readonly": false,
                            "type": "number[]",
                            "default": "",
                            "description": "Array with disabled weekday numbers."
                        },
                        {
                            "name": "hideOnDateTimeSelect",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to hide the overlay on date selection when showTime is enabled."
                        },
                        {
                            "name": "hideOnRangeSelection",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to hide the overlay on date selection is completed when selectionMode is range."
                        },
                        {
                            "name": "hourFormat",
                            "optional": true,
                            "readonly": false,
                            "type": "CalendarHourFormatType",
                            "default": "",
                            "description": "Specifies 12 or 24 hour format."
                        },
                        {
                            "name": "icon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the calendar button.\nDefault value is 'pi pi-calendar'."
                        },
                        {
                            "name": "id",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the element."
                        },
                        {
                            "name": "incrementIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to show in each of the increment buttons.\nDefault value is 'pi pi-chevron-up'."
                        },
                        {
                            "name": "inline",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, displays the calendar as inline instead of an overlay."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "manualInput",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Wheter to allow prevents entering the date manually via typing.\nDefault value is true."
                        },
                        {
                            "name": "maxDate",
                            "optional": true,
                            "readonly": false,
                            "type": "Date",
                            "default": "",
                            "description": "The maximum selectable date."
                        },
                        {
                            "name": "maxDateCount",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Maximum number of selectable dates in multiple mode."
                        },
                        {
                            "name": "minDate",
                            "optional": true,
                            "readonly": false,
                            "type": "Date",
                            "default": "",
                            "description": "The minimum selectable date."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "CalendarValueType",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "monthNavigator",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the month should be rendered as a dropdown instead of text."
                        },
                        {
                            "name": "nextIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to show in the next button.\nDefault value is 'pi pi-chevron-right'."
                        },
                        {
                            "name": "numberOfMonths",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of months to display.\nDefault value is 1."
                        },
                        {
                            "name": "panelClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the overlay panel."
                        },
                        {
                            "name": "panelProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to the overlay panel inside the component."
                        },
                        {
                            "name": "panelStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the overlay panel."
                        },
                        {
                            "name": "placeholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Placeholder text for the input."
                        },
                        {
                            "name": "previousIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to show in the previous button.\nDefault value is 'pi pi-chevron-left'."
                        },
                        {
                            "name": "readonly",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that an input field is read-only."
                        },
                        {
                            "name": "responsiveOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "CalendarResponsiveOptions[]",
                            "default": "",
                            "description": "An array of options for responsive design."
                        },
                        {
                            "name": "selectOtherMonths",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether days in other months shown before or after the current month are selectable. This only applies if the showOtherMonths option is set to true."
                        },
                        {
                            "name": "selectionMode",
                            "optional": true,
                            "readonly": false,
                            "type": "CalendarSelectionModeType",
                            "default": "",
                            "description": "Defines the quantity of the selection, valid values are 'single', 'multiple' and 'range'."
                        },
                        {
                            "name": "shortYearCutoff",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "The cutoff year for determining the century for a date.\nDefault value is +10."
                        },
                        {
                            "name": "showButtonBar",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display today and clear buttons at the footer."
                        },
                        {
                            "name": "showIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, displays a button with icon next to input."
                        },
                        {
                            "name": "showOnFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When disabled, datepicker will not be visible with input focus.\nDefault value is true."
                        },
                        {
                            "name": "showOtherMonths",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display dates in other months (non-selectable) at the start or end of the current month. To make these days selectable use the selectOtherMonths option.\nDefault value is true."
                        },
                        {
                            "name": "showSeconds",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show the seconds in time picker."
                        },
                        {
                            "name": "showTime",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display timepicker."
                        },
                        {
                            "name": "showWeek",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, calendar will show week numbers."
                        },
                        {
                            "name": "stepHour",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Hours to change per step.\nDefault value is 1."
                        },
                        {
                            "name": "stepMinute",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Minutes to change per step.\nDefault value is 1."
                        },
                        {
                            "name": "stepSecond",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Seconds to change per step.\nDefault value is 1."
                        },
                        {
                            "name": "timeOnly",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display timepicker only."
                        },
                        {
                            "name": "timeSeparator",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Separator of time selector.\nDefault value is ':'."
                        },
                        {
                            "name": "touchUI",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, calendar overlay is displayed as optimized for touch devices."
                        },
                        {
                            "name": "view",
                            "optional": true,
                            "readonly": false,
                            "type": "CalendarViewType",
                            "default": "",
                            "description": "Type of view to display, valid values are 'date', 'month' and 'year'."
                        },
                        {
                            "name": "yearNavigator",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the year should be rendered as a dropdown instead of text."
                        },
                        {
                            "name": "yearRange",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "The range of years displayed in the year drop-down in (nnnn:nnnn) format such as (2000:2020)."
                        }
                    ],
                    "methods": []
                },
                "CalendarResponsiveOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "breakpoint",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Breakpoint for responsive mode. Exp;"
                        },
                        {
                            "name": "numMonths",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "The number of visible months on breakpoint."
                        }
                    ],
                    "methods": []
                },
                "CalendarSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "date",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "decade",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "CalendarYearChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "month",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "New month."
                        },
                        {
                            "name": "year",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "New year."
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "CalendarEmits": {
                    "values": "{\n    \"blur\": \"Function, \",\n    \"clear-click\": \"Function, \",\n    \"date-select\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"hide\": \"Function, \",\n    \"input\": \"Function, \",\n    \"keydown\": \"Function, \",\n    \"month-change\": \"Function, \",\n    \"show\": \"Function, \",\n    \"today-click\": \"Function, \",\n    \"update:modelValue\": \"Function, \",\n    \"year-change\": \"Function, \"\n}"
                }
            }
        }
    },
    "card/Card": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "CardProps": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                },
                "CardSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "content",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "subtitle",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "title",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "CardEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "carousel/Carousel": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "CarouselProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "autoplayInterval",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Time in milliseconds to scroll items automatically.\nDefault value is 0."
                        },
                        {
                            "name": "circular",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if scrolling would be infinite."
                        },
                        {
                            "name": "containerClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the viewport container."
                        },
                        {
                            "name": "contentClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of main content."
                        },
                        {
                            "name": "indicatorsContentClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the indicator items."
                        },
                        {
                            "name": "nextButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the next navigation button."
                        },
                        {
                            "name": "numScroll",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of items to scroll.\nDefault value is 1."
                        },
                        {
                            "name": "numVisible",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of items per page.\nDefault value is 1."
                        },
                        {
                            "name": "orientation",
                            "optional": true,
                            "readonly": false,
                            "type": "CarouselOrientationType",
                            "default": "",
                            "description": "Specifies the layout of the component, valid values are 'horizontal' and 'vertical'."
                        },
                        {
                            "name": "page",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the first item.\nDefault value is 0."
                        },
                        {
                            "name": "prevButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the previous navigation button."
                        },
                        {
                            "name": "responsiveOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "CarouselResponsiveOptions[]",
                            "default": "",
                            "description": "An array of options for responsive design."
                        },
                        {
                            "name": "showIndicators",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display indicator container.\nDefault value is true."
                        },
                        {
                            "name": "showNavigators",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display navigation buttons in container.\nDefault value is true."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "An array of objects to display."
                        },
                        {
                            "name": "verticalViewPortHeight",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Height of the viewport in vertical layout.\nDefault value is '300px'."
                        }
                    ],
                    "methods": []
                },
                "CarouselResponsiveOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "breakpoint",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Breakpoint for responsive mode. Exp;"
                        },
                        {
                            "name": "numScroll",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "The number of scrolled items on breakpoint."
                        },
                        {
                            "name": "numVisible",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "The number of visible items on breakpoint."
                        }
                    ],
                    "methods": []
                },
                "CarouselSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "CarouselEmits": {
                    "values": "{\n    \"update:page\": \"Function, \"\n}"
                }
            }
        }
    },
    "cascadeselect/CascadeSelect": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "CascadeSelectChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Original event."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected option value."
                        }
                    ],
                    "methods": [],
                    "extendedBy": "CascadeSelectGroupChangeEvent"
                },
                "CascadeSelectGroupChangeEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Original event."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected option value."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "CascadeSelectChangeEvent"
                },
                "CascadeSelectProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "CascadeSelectAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are 'body' for document body and 'self' for the element itself."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "autoOptionFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to focus on the first visible or selected element when the overlay panel is shown.\nDefault value is true."
                        },
                        {
                            "name": "dataKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "A property to uniquely identify an option."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "dropdownIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the dropdown.\nDefault value is 'pi pi-chevron-down'."
                        },
                        {
                            "name": "emptyMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed when there are no options available. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No available options'."
                        },
                        {
                            "name": "emptySearchMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to display when filtering does not return any results. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No results found'."
                        },
                        {
                            "name": "emptySelectionMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when any option is not selected. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No selected item'."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "loading",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the dropdown is in loading state."
                        },
                        {
                            "name": "loadingIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in loading state.\nDefault value is 'pi pi-spinner pi-spin'."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "optionDisabled",
                            "optional": true,
                            "readonly": false,
                            "type": "CascadeSelectOptionDisabledType",
                            "default": "",
                            "description": "Property name or getter function to use as the disabled flag of an option, defaults to false when not defined."
                        },
                        {
                            "name": "optionGroupChildren",
                            "optional": true,
                            "readonly": false,
                            "type": "CascadeSelectOptionChildrenType",
                            "default": "",
                            "description": "Property name or getter function to retrieve the items of a group."
                        },
                        {
                            "name": "optionGroupIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the option group.\nDefault value is 'pi pi-angle-right'."
                        },
                        {
                            "name": "optionGroupLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "CascadeSelectOptionLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an option group."
                        },
                        {
                            "name": "optionLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "CascadeSelectOptionLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an option."
                        },
                        {
                            "name": "optionValue",
                            "optional": true,
                            "readonly": false,
                            "type": "CascadeSelectOptionValueType",
                            "default": "",
                            "description": "Property name or getter function to use as the value of an option, defaults to the option itself when not defined."
                        },
                        {
                            "name": "options",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "An array of selectitems to display as the available options."
                        },
                        {
                            "name": "panelClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the overlay panel."
                        },
                        {
                            "name": "panelProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to the overlay panel inside the component."
                        },
                        {
                            "name": "panelStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the overlay panel."
                        },
                        {
                            "name": "placeholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Default text to display when no option is selected."
                        },
                        {
                            "name": "searchLocale",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Locale to use in searching. The default locale is the host environment's current locale."
                        },
                        {
                            "name": "searchMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when filtering returns any results. Defaults to value from PrimeVue locale configuration.\nDefault value is '{0} results are available'."
                        },
                        {
                            "name": "selectOnFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, the focused option is selected/opened.\nDefault value is false."
                        },
                        {
                            "name": "selectionMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when options are selected. Defaults to value from PrimeVue locale configuration.\nDefault value is '{0} items selected'."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "CascadeSelectSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "indicator",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "option",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "CascadeSelectEmits": {
                    "values": "{\n    \"before-hide\": \"Function, \",\n    \"before-show\": \"Function, \",\n    \"blur\": \"Function, \",\n    \"change\": \"Function, \",\n    \"click\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"group-change\": \"Function, \",\n    \"hide\": \"Function, \",\n    \"show\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "chart/Chart": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ChartProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "canvasProps",
                            "optional": true,
                            "readonly": false,
                            "type": "CanvasHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the CanvasHTMLAttributes to canvas element inside the component."
                        },
                        {
                            "name": "data",
                            "optional": true,
                            "readonly": false,
                            "type": "object",
                            "default": "",
                            "description": "Data to display."
                        },
                        {
                            "name": "height",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Height of the chart in non-responsive mode.\nDefault value is 150."
                        },
                        {
                            "name": "options",
                            "optional": true,
                            "readonly": false,
                            "type": "object",
                            "default": "",
                            "description": "Options to customize the chart."
                        },
                        {
                            "name": "plugins",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Used to custom plugins of the chart."
                        },
                        {
                            "name": "type",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Type of the chart."
                        },
                        {
                            "name": "width",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Width of the chart in non-responsive mode.\nDefault value is 300."
                        }
                    ],
                    "methods": []
                },
                "ChartSelectEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "dataset",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected dataset."
                        },
                        {
                            "name": "element",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected element."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        }
                    ],
                    "methods": []
                },
                "ChartSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ChartEmits": {
                    "values": "{\n    \"loaded\": \"Function, \",\n    \"select\": \"Function, \"\n}"
                }
            }
        }
    },
    "checkbox/Checkbox": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "CheckboxProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "binary",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Allows to select a boolean value instead of multiple values."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the element should be disabled."
                        },
                        {
                            "name": "falseValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value in unchecked state."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value binding of the checkbox."
                        },
                        {
                            "name": "name",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Name of the input element."
                        },
                        {
                            "name": "readonly",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that an input field is read-only."
                        },
                        {
                            "name": "required",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the element is required."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        },
                        {
                            "name": "trueValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value in checked state."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value of the checkbox."
                        }
                    ],
                    "methods": []
                },
                "CheckboxSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "CheckboxEmits": {
                    "values": "{\n    \"change\": \"Function, \",\n    \"click\": \"Function, \",\n    \"input\": \"Function, \",\n    \"update:page\": \"Function, \"\n}"
                }
            }
        }
    },
    "chip/Chip": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ChipProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "icon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines the icon to display."
                        },
                        {
                            "name": "image",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines the image to display."
                        },
                        {
                            "name": "label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines the text to display."
                        },
                        {
                            "name": "removable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display a remove icon."
                        },
                        {
                            "name": "removeIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the remove element.\nDefault value is 'pi pi-times-circle'."
                        }
                    ],
                    "methods": []
                },
                "ChipSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ChipEmits": {
                    "values": "{\n    \"remove\": \"Function, \"\n}"
                }
            }
        }
    },
    "chips/Chips": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ChipsAddEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Added/Removed item value."
                        }
                    ],
                    "methods": [],
                    "extendedBy": "ChipsRemoveEvent"
                },
                "ChipsProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "addOnBlur",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to add an item when the input loses focus."
                        },
                        {
                            "name": "allowDuplicate",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to allow duplicate values or not.\nDefault value is true."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the element should be disabled."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the focus input to match a label defined for the chips."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "max",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Maximum number of entries allowed."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "placeholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Placeholder text for the input."
                        },
                        {
                            "name": "removeTokenIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in chip remove action.\nDefault value is 'pi pi-times-circle'."
                        },
                        {
                            "name": "separator",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Separator char to add an item when pressed in addition to the enter key."
                        }
                    ],
                    "methods": []
                },
                "ChipsRemoveEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Added/Removed item value."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "ChipsAddEvent"
                },
                "ChipsSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "chip",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ChipsEmits": {
                    "values": "{\n    \"add\": \"Function, \",\n    \"remove\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "colorpicker/ColorPicker": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ColorPickerChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected color value."
                        }
                    ],
                    "methods": []
                },
                "ColorPickerProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "ColorPickerAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are 'body' for document body and 'self' for the element itself."
                        },
                        {
                            "name": "autoZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to automatically manage layering.\nDefault value is true."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "defaultColor",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Initial color to display when value is not defined.\nDefault value is ff0000."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "format",
                            "optional": true,
                            "readonly": false,
                            "type": "ColorPickerFormatType",
                            "default": "",
                            "description": "Format to use in value binding, supported formats are 'hex', 'rgb' and 'hsb'."
                        },
                        {
                            "name": "inline",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display as an overlay or not."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "panelClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the overlay panel."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "ColorPickerSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ColorPickerEmits": {
                    "values": "{\n    \"change\": \"Function, \",\n    \"hide\": \"Function, \",\n    \"show\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "column": {
        "description": "",
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ColumnEmits": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                },
                "ColumnFilterMatchModeOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "string"
                        }
                    ],
                    "methods": []
                },
                "ColumnFilterModelType": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "matchMode",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Match mode of filterModel."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value of filterModel."
                        }
                    ],
                    "methods": []
                },
                "ColumnLoadingOptions": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "cellEven",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the cell is even."
                        },
                        {
                            "name": "cellFirst",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the cell is first."
                        },
                        {
                            "name": "cellIndex",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Cell index"
                        },
                        {
                            "name": "cellLast",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the cell is last."
                        },
                        {
                            "name": "cellOdd",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is odd."
                        },
                        {
                            "name": "column",
                            "optional": false,
                            "readonly": false,
                            "type": "default",
                            "default": "",
                            "description": "Column instance"
                        },
                        {
                            "name": "count",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Items count"
                        },
                        {
                            "name": "even",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is even."
                        },
                        {
                            "name": "field",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Column field"
                        },
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is first."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Item index"
                        },
                        {
                            "name": "last",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is last."
                        },
                        {
                            "name": "odd",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is odd."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "VirtualScrollerLoaderOptions"
                },
                "ColumnProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "alignFrozen",
                            "optional": true,
                            "readonly": false,
                            "type": "ColumnAlignFrozenType",
                            "default": "",
                            "description": "Position of a frozen column, valid values are left and right."
                        },
                        {
                            "name": "bodyClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the column body."
                        },
                        {
                            "name": "bodyStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the column body."
                        },
                        {
                            "name": "class",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of header, body and footer cells."
                        },
                        {
                            "name": "colspan",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of columns to span for grouping."
                        },
                        {
                            "name": "columnKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of a column if field property is not defined."
                        },
                        {
                            "name": "dataType",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Type of data. It's value is related to PrimeVue.filterMatchModeOptions config."
                        },
                        {
                            "name": "excludeGlobalFilter",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to exclude from global filtering or not."
                        },
                        {
                            "name": "expander",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Displays an icon to toggle row expansion."
                        },
                        {
                            "name": "exportFooter",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Custom export footer of the column to be exported as CSV."
                        },
                        {
                            "name": "exportHeader",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Custom export header of the column to be exported as CSV."
                        },
                        {
                            "name": "exportable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the column is included in data export."
                        },
                        {
                            "name": "field",
                            "optional": true,
                            "readonly": false,
                            "type": "ColumnFieldType",
                            "default": "",
                            "description": "Property represented by the column."
                        },
                        {
                            "name": "filterField",
                            "optional": true,
                            "readonly": false,
                            "type": "ColumnFieldType",
                            "default": "",
                            "description": "Property name to use in filtering, defaults to field."
                        },
                        {
                            "name": "filterHeaderClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the column filter header in row filter display."
                        },
                        {
                            "name": "filterHeaderStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the column filter header in row filter display."
                        },
                        {
                            "name": "filterMatchMode",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines the filtering algorithm to use when searching the options."
                        },
                        {
                            "name": "filterMatchModeOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "ColumnFilterMatchModeOptions[]",
                            "default": "",
                            "description": "An array of label-value pairs to override the global match mode options."
                        },
                        {
                            "name": "filterMenuClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the column filter overlay."
                        },
                        {
                            "name": "filterMenuStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the column filter overlay."
                        },
                        {
                            "name": "footer",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Footer content of the column."
                        },
                        {
                            "name": "footerClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the column footer."
                        },
                        {
                            "name": "footerStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the column footer."
                        },
                        {
                            "name": "frozen",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the column is fixed in horizontal scrolling."
                        },
                        {
                            "name": "header",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Header content of the column."
                        },
                        {
                            "name": "headerClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the column header."
                        },
                        {
                            "name": "headerStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the column header."
                        },
                        {
                            "name": "hidden",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the column is rendered."
                        },
                        {
                            "name": "maxConstraints",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Maximum number of constraints for a column filter.\nDefault value is 2."
                        },
                        {
                            "name": "reorderableColumn",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if the column itself can be reordered with dragging."
                        },
                        {
                            "name": "rowEditor",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, column displays row editor controls."
                        },
                        {
                            "name": "rowReorder",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether this column displays an icon to reorder the rows."
                        },
                        {
                            "name": "rowReorderIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the drag handle to reorder rows.\nDefault value is 'pi pi-bars'."
                        },
                        {
                            "name": "rowspan",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to span for grouping."
                        },
                        {
                            "name": "selectionMode",
                            "optional": true,
                            "readonly": false,
                            "type": "ColumnSelectionModeType",
                            "default": "",
                            "description": "Defines column based selection mode, options are 'single' and 'multiple'."
                        },
                        {
                            "name": "showAddButton",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, a button is displayed to add more rules.\nDefault value is true."
                        },
                        {
                            "name": "showApplyButton",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Displays a button to apply the column filtering.\nDefault value is true."
                        },
                        {
                            "name": "showClearButton",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Displays a button to clear the column filtering.\nDefault value is true."
                        },
                        {
                            "name": "showFilterMatchModes",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show the match modes selector.\nDefault value is true."
                        },
                        {
                            "name": "showFilterMenu",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display the filter overlay.\nDefault value is true."
                        },
                        {
                            "name": "showFilterOperator",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, match all and match any operator selector is displayed.\nDefault value is true."
                        },
                        {
                            "name": "sortField",
                            "optional": true,
                            "readonly": false,
                            "type": "ColumnFieldType",
                            "default": "",
                            "description": "Property name to use in sorting, defaults to field."
                        },
                        {
                            "name": "sortable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if a column is sortable."
                        },
                        {
                            "name": "style",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of header, body and footer cells."
                        }
                    ],
                    "methods": []
                },
                "ColumnSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": [
                        {
                            "name": "body",
                            "parameters": [
                                {
                                    "name": "scope",
                                    "optional": false,
                                    "type": "Object",
                                    "description": "body slot's params."
                                }
                            ],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Custom body template."
                        },
                        {
                            "name": "editor",
                            "parameters": [
                                {
                                    "name": "scope",
                                    "optional": false,
                                    "type": "Object",
                                    "description": "editor slot's params."
                                }
                            ],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Custom editor template."
                        },
                        {
                            "name": "filter",
                            "parameters": [
                                {
                                    "name": "scope",
                                    "optional": false,
                                    "type": "Object",
                                    "description": "filter slot's params."
                                }
                            ],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Custom filter template."
                        },
                        {
                            "name": "filterapply",
                            "parameters": [
                                {
                                    "name": "scope",
                                    "optional": false,
                                    "type": "Object",
                                    "description": "filter apply slot's params."
                                }
                            ],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Custom filter apply template."
                        },
                        {
                            "name": "filterclear",
                            "parameters": [
                                {
                                    "name": "scope",
                                    "optional": false,
                                    "type": "Object",
                                    "description": "filter clear slot's params."
                                }
                            ],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Custom filter clear template."
                        },
                        {
                            "name": "filterfooter",
                            "parameters": [
                                {
                                    "name": "scope",
                                    "optional": false,
                                    "type": "Object",
                                    "description": "filter footer slot's params."
                                }
                            ],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Custom filter footer template."
                        },
                        {
                            "name": "filterheader",
                            "parameters": [
                                {
                                    "name": "scope",
                                    "optional": false,
                                    "type": "Object",
                                    "description": "filter header slot's params."
                                }
                            ],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Custom filter header template."
                        },
                        {
                            "name": "footer",
                            "parameters": [
                                {
                                    "name": "scope",
                                    "optional": false,
                                    "type": "Object",
                                    "description": "footer slot's params."
                                }
                            ],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Custom footer template."
                        },
                        {
                            "name": "header",
                            "parameters": [
                                {
                                    "name": "scope",
                                    "optional": false,
                                    "type": "Object",
                                    "description": "header slot's params."
                                }
                            ],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Custom header template."
                        },
                        {
                            "name": "loading",
                            "parameters": [
                                {
                                    "name": "scope",
                                    "optional": false,
                                    "type": "Object",
                                    "description": "loading slot's params."
                                }
                            ],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Custom loading template."
                        }
                    ]
                }
            }
        }
    },
    "columngroup": {
        "description": "",
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ColumnGroupProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "type",
                            "optional": true,
                            "readonly": false,
                            "type": "\"footer\" | \"header\"",
                            "default": "",
                            "description": "Type of column group"
                        }
                    ],
                    "methods": []
                },
                "ColumnGroupSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ColumnGroupEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "config/PrimeVue": {
        "functions": {
            "description": "Defines the custom functions used by the module.",
            "values": {
                "usePrimeVue": {
                    "name": "usePrimeVue",
                    "parameters": [],
                    "returnType": "Object"
                }
            }
        }
    },
    "confirmationoptions/ConfirmationOptions": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ConfirmationOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "accept",
                            "optional": true,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "acceptClass",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the accept button."
                        },
                        {
                            "name": "acceptIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the accept button."
                        },
                        {
                            "name": "acceptLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Label of the accept button. Defaults to PrimeVue Locale configuration."
                        },
                        {
                            "name": "blockScroll",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether background scroll should be blocked when dialog is visible."
                        },
                        {
                            "name": "defaultFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Element to receive the focus when the dialog gets visible, valid values are \"accept\" and \"reject\"."
                        },
                        {
                            "name": "group",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Optional key to match the key of the confirmation, useful to target a specific confirm dialog instance."
                        },
                        {
                            "name": "header",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Header text of the dialog."
                        },
                        {
                            "name": "icon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display next to the message."
                        },
                        {
                            "name": "message",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Message of the confirmation."
                        },
                        {
                            "name": "onHide",
                            "optional": true,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "position",
                            "optional": true,
                            "readonly": false,
                            "type": "ConfirmationPositionType",
                            "default": "",
                            "description": "Position of the dialog, options are 'center', 'top', 'bottom', 'left', 'right', 'topleft', 'topright', 'bottomleft' or 'bottomright'."
                        },
                        {
                            "name": "reject",
                            "optional": true,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "rejectClass",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the reject button."
                        },
                        {
                            "name": "rejectIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the reject button."
                        },
                        {
                            "name": "rejectLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Label of the reject button. Defaults to PrimeVue Locale configuration."
                        },
                        {
                            "name": "target",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLElement",
                            "default": "",
                            "description": "Element to align the overlay."
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ConfirmationPositionType": {
                    "values": "\"center\" | \"top\" | \"bottom\" | \"left\" | \"right\" | \"topleft\" | \"topright\" | \"bottomleft\" | \"bottomright\" | undefined"
                }
            }
        }
    },
    "confirmationservice/ConfirmationService": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ConfirmationServiceMethods": {
                    "relatedProp": "",
                    "props": [],
                    "methods": [
                        {
                            "name": "close",
                            "parameters": [],
                            "returnType": "void",
                            "description": "Hides the dialog without invoking accept or reject callbacks."
                        },
                        {
                            "name": "require",
                            "parameters": [
                                {
                                    "name": "options",
                                    "optional": false,
                                    "type": "ConfirmationOptions",
                                    "description": "Confirmation Object"
                                }
                            ],
                            "returnType": "void",
                            "description": "Displays the dialog using the confirmation object options."
                        }
                    ]
                }
            }
        }
    },
    "confirmdialog/ConfirmDialog": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ConfirmDialogBreakpoints": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "string"
                        }
                    ],
                    "methods": []
                },
                "ConfirmDialogProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "breakpoints",
                            "optional": true,
                            "readonly": false,
                            "type": "ConfirmDialogBreakpoints",
                            "default": "",
                            "description": "Object literal to define widths per screen size."
                        },
                        {
                            "name": "group",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Optional key to match the key of the confirmation, useful to target a specific confirm dialog instance."
                        }
                    ],
                    "methods": []
                },
                "ConfirmDialogSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "message",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ConfirmDialogEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "confirmpopup/ConfirmPopup": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ConfirmPopupProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "group",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Optional key to match the key of the confirmation, useful to target a specific confirm dialog instance."
                        }
                    ],
                    "methods": []
                },
                "ConfirmPopupSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "message",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ConfirmPopupEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "contextmenu/ContextMenu": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ContextMenuProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "ContextMenuAppendTo",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying menu element."
                        },
                        {
                            "name": "autoZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to automatically manage layering.\nDefault value is true."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "exact",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to apply 'router-link-active-exact' class if route exactly matches the item path.\nDefault value is true."
                        },
                        {
                            "name": "global",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Attaches the menu to document instead of a particular item."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "An array of menuitems."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "ContextMenuSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ContextMenuEmits": {
                    "values": "{\n    \"before-hide\": \"Function, \",\n    \"before-show\": \"Function, \",\n    \"blur\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"hide\": \"Function, \",\n    \"show\": \"Function, \"\n}"
                }
            }
        }
    },
    "datatable": {
        "description": "DataTable displays data in tabular format.\n\n[Live Demo](https://www.primereact.org/datatable/)",
        "components": {
            "default": {
                "description": "DataTable displays data in tabular format.",
                "methods": {
                    "description": "Defines methods that can be accessed by the component's reference.",
                    "values": [
                        {
                            "name": "exportCSV",
                            "parameters": [
                                {
                                    "name": "options",
                                    "type": "DataTableExportCSVOptions",
                                    "description": "Export options."
                                },
                                {
                                    "name": "data",
                                    "type": "any[]",
                                    "description": "Custom exportable data. This param can be used on lazy dataTable."
                                }
                            ],
                            "returnType": "void",
                            "description": "Exports the data to CSV format."
                        }
                    ]
                }
            }
        },
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "DataTableCellEditCancelEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Row data to edit."
                        },
                        {
                            "name": "field",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Field name of the row data."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the row data to edit."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "DataTableCellEditInitEvent"
                },
                "DataTableCellEditCompleteEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Row data to edit."
                        },
                        {
                            "name": "field",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Field name of the row data."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the row data to edit."
                        },
                        {
                            "name": "newData",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "New row data after editing."
                        },
                        {
                            "name": "newValue",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Field value of new row data after editing."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "type",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Type of completion such as 'enter', 'outside' or 'tab'."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Field value of row data to edit."
                        }
                    ],
                    "methods": []
                },
                "DataTableCellEditInitEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Row data to edit."
                        },
                        {
                            "name": "field",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Field name of the row data."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the row data to edit."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedBy": "DataTableCellEditCancelEvent"
                },
                "DataTableColumnReorderEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "dragIndex",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the dragged column"
                        },
                        {
                            "name": "dropIndex",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the dropped column"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": []
                },
                "DataTableColumnResizeEndEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "delta",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Change in column width"
                        },
                        {
                            "name": "element",
                            "optional": false,
                            "readonly": false,
                            "type": "HTMLElement",
                            "default": "",
                            "description": "DOM element of the resized column."
                        }
                    ],
                    "methods": []
                },
                "DataTableEditingRows": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean"
                        }
                    ],
                    "methods": []
                },
                "DataTableEmits": {
                    "relatedProp": "",
                    "props": [],
                    "methods": [
                        {
                            "name": "cell-edit-cancel",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableCellEditCancelEvent",
                                    "description": "Custom cell edit cancel event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when cell edit is cancelled with escape key."
                        },
                        {
                            "name": "cell-edit-complete",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableCellEditCompleteEvent",
                                    "description": "Custom cell edit complete event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when cell edit is completed."
                        },
                        {
                            "name": "cell-edit-init",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableCellEditInitEvent",
                                    "description": "Custom cell edit init."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when cell edit is initiated."
                        },
                        {
                            "name": "column-reorder",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableColumnReorderEvent",
                                    "description": "Custom column reorder event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a column is reordered."
                        },
                        {
                            "name": "column-resize-end",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableColumnResizeEndEvent"
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a column is resized."
                        },
                        {
                            "name": "filter",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableFilterEvent",
                                    "description": "Custom filter event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Event to emit after filtering, not triggered in lazy mode."
                        },
                        {
                            "name": "page",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTablePageEvent",
                                    "description": "Custom page event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke on pagination. Sort and Filter information is also available for lazy loading implementation."
                        },
                        {
                            "name": "row-click",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowClickEvent",
                                    "description": "Custom row click event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a row is clicked."
                        },
                        {
                            "name": "row-collapse",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowCollapseEvent",
                                    "description": "Custom row collapse event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a row is collapsed."
                        },
                        {
                            "name": "row-contextmenu",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowContextMenuEvent",
                                    "description": "Custom row context menu event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a row is selected with a ContextMenu."
                        },
                        {
                            "name": "row-dblclick",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowDoubleClickEvent",
                                    "description": "Custom row double click event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a row is double clicked."
                        },
                        {
                            "name": "row-edit-cancel",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowEditCancelEvent",
                                    "description": "Custom row edit cancel event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when row edit is cancelled."
                        },
                        {
                            "name": "row-edit-init",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowEditInitEvent",
                                    "description": "Custom row edit init event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when row edit is initiated."
                        },
                        {
                            "name": "row-edit-save",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowEditSaveEvent",
                                    "description": "Custom row edit save event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when row edit is saved."
                        },
                        {
                            "name": "row-expand",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowExpandEvent",
                                    "description": "Custom row expand event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a row is expanded."
                        },
                        {
                            "name": "row-reorder",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowReorderEvent",
                                    "description": "Custom row reorder event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a row is reordered."
                        },
                        {
                            "name": "row-select",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowSelectEvent",
                                    "description": "Custom row select event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a row is selected."
                        },
                        {
                            "name": "row-select-all",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowSelectAllEvent",
                                    "description": "Custom row select all event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Fired when header checkbox is checked."
                        },
                        {
                            "name": "row-unselect",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowUnselectEvent",
                                    "description": "Custom row unselect event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a row is unselected."
                        },
                        {
                            "name": "row-unselect-all",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowUnselectAllEvent",
                                    "description": "Custom row unselect all event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Fired when header checkbox is unchecked."
                        },
                        {
                            "name": "rowgroup-collapse",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowCollapseEvent",
                                    "description": "Custom row collapse event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a row group is collapsed."
                        },
                        {
                            "name": "rowgroup-expand",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableRowExpandEvent",
                                    "description": "Custom row expand event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a row group is expanded."
                        },
                        {
                            "name": "select-all-change",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableSelectAllChangeEvent",
                                    "description": "Custom select all change event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when all data is selected."
                        },
                        {
                            "name": "sort",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableSortEvent",
                                    "description": "Custom sort event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke on sort. Page and Filter information is also available for lazy loading implementation."
                        },
                        {
                            "name": "state-restore",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableStateEvent",
                                    "description": "Custom state event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Invoked when a stateful table saves the state."
                        },
                        {
                            "name": "state-save",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "DataTableStateEvent",
                                    "description": "Custom state event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Invoked when a stateful table restores the state."
                        },
                        {
                            "name": "update:contextMenuSelection",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "any",
                                    "description": "New value."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the contextMenuSelection changes."
                        },
                        {
                            "name": "update:editingRows",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "any[] | DataTableEditingRows",
                                    "description": "New value."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the editingRows changes."
                        },
                        {
                            "name": "update:expandedRowGroups",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "any[] | DataTableExpandedRows",
                                    "description": "New value."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the expandedRowGroups changes."
                        },
                        {
                            "name": "update:expandedRows",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "any[] | DataTableExpandedRows",
                                    "description": "New value."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the expandedRows changes."
                        },
                        {
                            "name": "update:filters",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "DataTableFilterMeta",
                                    "description": "New value."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the filters changes."
                        },
                        {
                            "name": "update:first",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "number",
                                    "description": "New value."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the first changes."
                        },
                        {
                            "name": "update:multiSortMeta",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "DataTableMultiSortMetaType",
                                    "description": "New value."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the multiSortMeta changes."
                        },
                        {
                            "name": "update:rows",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "number",
                                    "description": "New value."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the rows changes."
                        },
                        {
                            "name": "update:selection",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "any",
                                    "description": "New value."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the selection changes."
                        },
                        {
                            "name": "update:sortField",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "string",
                                    "description": "New value."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the sortField changes."
                        },
                        {
                            "name": "update:sortOrder",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "undefined | number",
                                    "description": "New value."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the sortOrder changes."
                        },
                        {
                            "name": "value-change",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "any[]",
                                    "description": "Value displayed by the table."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke after filtering, sorting, pagination and cell editing to pass the rendered value."
                        }
                    ]
                },
                "DataTableExpandedRows": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean"
                        }
                    ],
                    "methods": []
                },
                "DataTableExportCSVOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "selectionOnly",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to export only selection data."
                        }
                    ],
                    "methods": []
                },
                "DataTableExportFunctionOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Row data"
                        },
                        {
                            "name": "field",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Column Field"
                        }
                    ],
                    "methods": []
                },
                "DataTableFilterEvent": {
                    "description": "Custom sort event.",
                    "relatedProp": "sort",
                    "props": [
                        {
                            "name": "filterMatchModes",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableFilterMatchModeType",
                            "default": "",
                            "description": "Match modes per field"
                        },
                        {
                            "name": "filteredValue",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Filtered collection (non-lazy only)"
                        },
                        {
                            "name": "filters",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableFilterMeta",
                            "default": "",
                            "description": "Collection of active filters"
                        },
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of first record"
                        },
                        {
                            "name": "multiSortMeta",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableMultiSortMetaType",
                            "default": "",
                            "description": "MultiSort metadata"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "rows",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display in new page"
                        },
                        {
                            "name": "sortField",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableSortFieldType",
                            "default": "",
                            "description": "Field to sort against"
                        },
                        {
                            "name": "sortOrder",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableSortOrderType",
                            "default": "",
                            "description": "Sort order as integer"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "DataTableSortEvent"
                },
                "DataTableFilterMeta": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "string | DataTableFilterMetaData | DataTableOperatorFilterMetaData"
                        }
                    ],
                    "methods": []
                },
                "DataTableFilterMetaData": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "matchMode",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Filter match mode"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Filter value"
                        }
                    ],
                    "methods": []
                },
                "DataTableOperatorFilterMetaData": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "constraints",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableFilterMetaData[]",
                            "default": "",
                            "description": "Array of filter meta datas."
                        },
                        {
                            "name": "operator",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Filter operator"
                        }
                    ],
                    "methods": []
                },
                "DataTablePageEvent": {
                    "description": "Custom pagination event.",
                    "relatedProp": "page",
                    "props": [
                        {
                            "name": "filterMatchModes",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableFilterMatchModeType",
                            "default": "",
                            "description": "Match modes per field"
                        },
                        {
                            "name": "filters",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableFilterMeta",
                            "default": "",
                            "description": "Collection of active filters"
                        },
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of first record"
                        },
                        {
                            "name": "multiSortMeta",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableMultiSortMetaType",
                            "default": "",
                            "description": "MultiSort metadata"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "page",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "New page number"
                        },
                        {
                            "name": "pageCount",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Total page count"
                        },
                        {
                            "name": "rows",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display in new page"
                        },
                        {
                            "name": "sortField",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableSortFieldType",
                            "default": "",
                            "description": "Field to sort against"
                        },
                        {
                            "name": "sortOrder",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableSortOrderType",
                            "default": "",
                            "description": "Sort order as integer"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "DataTableSortEvent"
                },
                "DataTableProps": {
                    "description": "Defines valid properties in Datatable component.",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "alwaysShowPaginator",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show it even there is only one page.\nDefault value is true."
                        },
                        {
                            "name": "autoLayout",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the cell widths scale according to their content or not. Does not apply to scrollable tables."
                        },
                        {
                            "name": "breakpoint",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "The breakpoint to define the maximum width boundary when using stack responsive layout.\nDefault value is '960px'."
                        },
                        {
                            "name": "collapsedRowIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the row toggler to display the row as collapsed.\nDefault value is 'pi-chevron-right'."
                        },
                        {
                            "name": "columnResizeMode",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableColumnResizeModeType",
                            "default": "",
                            "description": "Defines whether the overall table width should change on column resize, valid values are 'fit' and 'expand'."
                        },
                        {
                            "name": "compareSelectionBy",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableCompareSelectionBy",
                            "default": "",
                            "description": "Algorithm to define if a row is selected, valid values are 'equals' that compares by reference and 'deepEquals' that compares all fields."
                        },
                        {
                            "name": "contextMenu",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Enables context menu integration."
                        },
                        {
                            "name": "contextMenuSelection",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected row instance with the ContextMenu."
                        },
                        {
                            "name": "csvSeparator",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Character to use as the csv separator.\nDefault value is ','."
                        },
                        {
                            "name": "currentPageReportTemplate",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Template of the current page report element. It displays information about the pagination state. Default value is ({currentPage} of {totalPages}) whereas available placeholders are the following;\n\n- {currentPage}\n- {totalPages}\n- {rows}\n- {first}\n- {last}\n- {totalRecords}"
                        },
                        {
                            "name": "dataKey",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableDataKeyType",
                            "default": "",
                            "description": "Name of the field that uniquely identifies the a record in the data."
                        },
                        {
                            "name": "defaultSortOrder",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Default sort order of an unsorted column.\nDefault value is 1."
                        },
                        {
                            "name": "editMode",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableEditModeType",
                            "default": "",
                            "description": "Defines the incell editing mode, valid options are 'cell' and 'row'."
                        },
                        {
                            "name": "editingRows",
                            "optional": true,
                            "readonly": false,
                            "type": "any[] | DataTableEditingRows",
                            "default": "",
                            "description": "A collection of rows to represent the current editing data in row edit mode."
                        },
                        {
                            "name": "expandableRowGroups",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the row groups can be expandable."
                        },
                        {
                            "name": "expandedRowGroups",
                            "optional": true,
                            "readonly": false,
                            "type": "any[] | DataTableExpandedRows",
                            "default": "",
                            "description": "An array of group field values whose groups would be rendered as expanded."
                        },
                        {
                            "name": "expandedRowIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the row toggler to display the row as expanded.\nDefault value is 'pi-chevron-down'."
                        },
                        {
                            "name": "expandedRows",
                            "optional": true,
                            "readonly": false,
                            "type": "any[] | DataTableExpandedRows",
                            "default": "",
                            "description": "A collection of row data display as expanded."
                        },
                        {
                            "name": "exportFilename",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Name of the exported file.\nDefault value is 'download'."
                        },
                        {
                            "name": "filterDisplay",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableFilterDisplayType",
                            "default": "",
                            "description": "Layout of the filter elements, valid values are 'row' and 'menu'."
                        },
                        {
                            "name": "filterInputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable filter input element inside the component."
                        },
                        {
                            "name": "filterLocale",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Locale to use in filtering. The default locale is the host environment's current locale."
                        },
                        {
                            "name": "filters",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableFilterMeta",
                            "default": "",
                            "description": "Filters object with key-value pairs to define the filters."
                        },
                        {
                            "name": "first",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the first row to be displayed.\nDefault value is 0."
                        },
                        {
                            "name": "frozenValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Items of the frozen part in scrollable DataTable."
                        },
                        {
                            "name": "globalFilterFields",
                            "optional": true,
                            "readonly": false,
                            "type": "string[]",
                            "default": "",
                            "description": "Fields for global filter"
                        },
                        {
                            "name": "groupRowsBy",
                            "optional": true,
                            "readonly": false,
                            "type": "string | string[] | Function",
                            "default": "",
                            "description": "One or more field names to use in row grouping."
                        },
                        {
                            "name": "lazy",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if data is loaded and interacted with in lazy manner."
                        },
                        {
                            "name": "loading",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Displays a loader to indicate data load is in progress."
                        },
                        {
                            "name": "loadingIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "The icon to show while indicating data load is in progress.\nDefault value is 'pi pi-spinner'."
                        },
                        {
                            "name": "metaKeySelection",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines whether metaKey is requred or not for the selection. When true metaKey needs to be pressed to select or unselect an item and\nwhen set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.\nDefault value is 'true'."
                        },
                        {
                            "name": "multiSortMeta",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableMultiSortMetaType",
                            "default": "",
                            "description": "An array of SortMeta objects to sort the data by default in multiple sort mode."
                        },
                        {
                            "name": "pageLinkSize",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of page links to display.\nDefault value is 5."
                        },
                        {
                            "name": "paginator",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified as true, enables the pagination."
                        },
                        {
                            "name": "paginatorPosition",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTablePaginatorPositionType",
                            "default": "",
                            "description": "Position of the paginator, options are 'top','bottom' or 'both'."
                        },
                        {
                            "name": "paginatorTemplate",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Template of the paginator. It can be customized using the template property using the predefined keys, default value is 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown'. Here are the available elements that can be placed inside a paginator in any order.\n\n- FirstPageLink\n- PrevPageLink\n- PageLinks\n- NextPageLink\n- LastPageLink\n- RowsPerPageDropdown\n- JumpToPageDropdown\n- JumpToPageInput\n- CurrentPageReport"
                        },
                        {
                            "name": "removableSort",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, columns can have an un-sorted state."
                        },
                        {
                            "name": "reorderableColumns",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, columns can be reordered using drag and drop."
                        },
                        {
                            "name": "resizableColumns",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, columns can be resized using drag and drop."
                        },
                        {
                            "name": "responsiveLayout",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableResponsiveLayoutType",
                            "default": "",
                            "description": "Defines the responsive mode, valid options are 'stack' and 'scroll'."
                        },
                        {
                            "name": "rowClass",
                            "optional": true,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "rowGroupMode",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableRowGroupModeType",
                            "default": "",
                            "description": "Defines the row group mode, valid options are 'subheader' and 'rowspan'."
                        },
                        {
                            "name": "rowHover",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, background of the rows change on hover."
                        },
                        {
                            "name": "rowStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "A function that takes the row data as a parameter and returns the inline style for the corresponding row."
                        },
                        {
                            "name": "rows",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display per page."
                        },
                        {
                            "name": "rowsPerPageOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "number[]",
                            "default": "",
                            "description": "Array of integer values to display inside rows per page dropdown."
                        },
                        {
                            "name": "scrollDirection",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableScrollDirectionType",
                            "default": "",
                            "description": "Orientation of the scrolling, options are 'vertical', 'horizontal' and 'both'."
                        },
                        {
                            "name": "scrollHeight",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableScrollHeightType",
                            "default": "",
                            "description": "Height of the scroll viewport in fixed pixels or the 'flex' keyword for a dynamic size."
                        },
                        {
                            "name": "scrollable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified, enables horizontal and/or vertical scrolling."
                        },
                        {
                            "name": "selectAll",
                            "optional": true,
                            "readonly": false,
                            "type": "Nullable<boolean>",
                            "default": "",
                            "description": "Whether all data is selected."
                        },
                        {
                            "name": "selection",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected row in single mode or an array of values in multiple mode."
                        },
                        {
                            "name": "selectionMode",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableSelectionModeType",
                            "default": "",
                            "description": "Specifies the selection mode, valid values are 'single' and 'multiple'."
                        },
                        {
                            "name": "showGridlines",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show grid lines between cells."
                        },
                        {
                            "name": "sortField",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableSortFieldType",
                            "default": "",
                            "description": "Property name or a getter function of a row data used for sorting by default"
                        },
                        {
                            "name": "sortMode",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableSortModeType",
                            "default": "",
                            "description": "Defines whether sorting works on single column or on multiple columns."
                        },
                        {
                            "name": "sortOrder",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Order to sort the data by default."
                        },
                        {
                            "name": "stateKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Unique identifier of a stateful table to use in state storage."
                        },
                        {
                            "name": "stateStorage",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTableStateStorageType",
                            "default": "",
                            "description": "Defines where a stateful table keeps its state, valid values are 'session' for sessionStorage and 'local' for localStorage."
                        },
                        {
                            "name": "stripedRows",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to displays rows with alternating colors."
                        },
                        {
                            "name": "tableClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the table element."
                        },
                        {
                            "name": "tableProps",
                            "optional": true,
                            "readonly": false,
                            "type": "TableHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the TableHTMLAttributes to table element inside the component."
                        },
                        {
                            "name": "tableStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the table element."
                        },
                        {
                            "name": "totalRecords",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of total records, defaults to length of value when not defined."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "An array of objects to display."
                        },
                        {
                            "name": "virtualScrollerOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "VirtualScrollerProps",
                            "default": "",
                            "description": "Whether to use the virtualScroller feature. The properties of VirtualScroller component can be used like an object in it.\nNote: Currently only vertical orientation mode is supported."
                        }
                    ],
                    "methods": [
                        {
                            "name": "exportFunction",
                            "parameters": [
                                {
                                    "name": "options",
                                    "optional": false,
                                    "type": "DataTableExportFunctionOptions"
                                }
                            ],
                            "returnType": "any",
                            "description": "Custom function to export data."
                        }
                    ]
                },
                "DataTableRowClickEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected row data."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Row index."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        }
                    ],
                    "methods": [],
                    "extendedBy": "DataTableRowDoubleClickEvent,DataTableRowContextMenuEvent"
                },
                "DataTableRowCollapseEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Expanded row data"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "DataTableRowExpandEvent"
                },
                "DataTableRowContextMenuEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected row data."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Row index."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "DataTableRowClickEvent"
                },
                "DataTableRowDoubleClickEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected row data."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Row index."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "DataTableRowClickEvent"
                },
                "DataTableRowEditCancelEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Row data to edit."
                        },
                        {
                            "name": "field",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Field name of the row data."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the row data to edit."
                        },
                        {
                            "name": "newData",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "New row data after editing."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "DataTableRowEditInitEvent"
                },
                "DataTableRowEditInitEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Row data to edit."
                        },
                        {
                            "name": "field",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Field name of the row data."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the row data to edit."
                        },
                        {
                            "name": "newData",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "New row data after editing."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedBy": "DataTableRowEditSaveEvent,DataTableRowEditCancelEvent"
                },
                "DataTableRowEditSaveEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Row data to edit."
                        },
                        {
                            "name": "field",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Field name of the row data."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the row data to edit."
                        },
                        {
                            "name": "newData",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "New row data after editing."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "DataTableRowEditInitEvent"
                },
                "DataTableRowExpandEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Expanded row data"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedBy": "DataTableRowCollapseEvent"
                },
                "DataTableRowReorderEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "dragIndex",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the dragged row"
                        },
                        {
                            "name": "dropIndex",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the dropped row"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Reordered value"
                        }
                    ],
                    "methods": []
                },
                "DataTableRowSelectAllEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected dataset"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": []
                },
                "DataTableRowSelectEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected row data"
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Row index"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "type",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Type of the selection, valid values are 'row', 'radio' or 'checkbox'."
                        }
                    ],
                    "methods": [],
                    "extendedBy": "DataTableRowUnselectEvent"
                },
                "DataTableRowUnselectAllEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": []
                },
                "DataTableRowUnselectEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected row data"
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Row index"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "type",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Type of the selection, valid values are 'row', 'radio' or 'checkbox'."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "DataTableRowSelectEvent"
                },
                "DataTableSelectAllChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "checked",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether all data is selected."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": []
                },
                "DataTableSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "empty",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "expansion",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "groupfooter",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "groupheader",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "loading",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "paginatorend",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "paginatorstart",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "DataTableSortEvent": {
                    "description": "Custom tab open event.",
                    "relatedProp": "sort",
                    "props": [
                        {
                            "name": "filterMatchModes",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableFilterMatchModeType",
                            "default": "",
                            "description": "Match modes per field"
                        },
                        {
                            "name": "filters",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableFilterMeta",
                            "default": "",
                            "description": "Collection of active filters"
                        },
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of first record"
                        },
                        {
                            "name": "multiSortMeta",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableMultiSortMetaType",
                            "default": "",
                            "description": "MultiSort metadata"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "rows",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display in new page"
                        },
                        {
                            "name": "sortField",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableSortFieldType",
                            "default": "",
                            "description": "Field to sort against"
                        },
                        {
                            "name": "sortOrder",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableSortOrderType",
                            "default": "",
                            "description": "Sort order as integer"
                        }
                    ],
                    "methods": [],
                    "extendedBy": "DataTablePageEvent,DataTableFilterEvent"
                },
                "DataTableSortMeta": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "field",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Column field"
                        },
                        {
                            "name": "order",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableSortOrderType",
                            "default": "",
                            "description": "Column sort order"
                        }
                    ],
                    "methods": []
                },
                "DataTableStateEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "columWidths",
                            "optional": false,
                            "readonly": false,
                            "type": "string[]",
                            "default": "",
                            "description": "Comma separated list of column widths"
                        },
                        {
                            "name": "columnOrder",
                            "optional": false,
                            "readonly": false,
                            "type": "string[]",
                            "default": "",
                            "description": "Order of the columns"
                        },
                        {
                            "name": "expandedRowGroups",
                            "optional": false,
                            "readonly": false,
                            "type": "any[] | DataTableExpandedRows",
                            "default": "",
                            "description": "Instances of rows in expanded state"
                        },
                        {
                            "name": "expandedRowKeys",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Keys of rows in expanded state"
                        },
                        {
                            "name": "expandedRows",
                            "optional": false,
                            "readonly": false,
                            "type": "any[] | DataTableExpandedRows",
                            "default": "",
                            "description": "Instances of rows in expanded state"
                        },
                        {
                            "name": "filters",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableFilterMeta",
                            "default": "",
                            "description": "Collection of active filters"
                        },
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of first record"
                        },
                        {
                            "name": "multiSortMeta",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableMultiSortMetaType",
                            "default": "",
                            "description": "MultiSort metadata"
                        },
                        {
                            "name": "rows",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display in new page"
                        },
                        {
                            "name": "selection",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected rows"
                        },
                        {
                            "name": "selectionKeys",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Keys of selected rows"
                        },
                        {
                            "name": "sortField",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Field to sort against"
                        },
                        {
                            "name": "sortOrder",
                            "optional": false,
                            "readonly": false,
                            "type": "DataTableSortOrderType",
                            "default": "",
                            "description": "Sort order as integer"
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "DataTableColumnResizeModeType": {
                    "values": "\"fit\" | \"expand\" | undefined"
                },
                "DataTableCompareSelectionBy": {
                    "values": "\"equals\" | \"deepEquals\" | undefined"
                },
                "DataTableDataKeyType": {
                    "values": "string | Function | undefined"
                },
                "DataTableEditModeType": {
                    "values": "\"cell\" | \"row\" | undefined"
                },
                "DataTableFilterDisplayType": {
                    "values": "\"menu\" | \"row\" | undefined"
                },
                "DataTableFilterMatchModeType": {
                    "values": "\"startsWith\" | \"contains\" | \"notContains\" | \"endsWith\" | \"equals\" | \"notEquals\" | \"in\" | \"lt\" | \"lte\" | \"gt\" | \"gte\" | \"between\" | \"dateIs\" | \"dateIsNot\" | \"dateBefore\" | \"dateAfter\" | undefined"
                },
                "DataTableMultiSortMetaType": {
                    "values": "DataTableSortMeta[] | undefined | null"
                },
                "DataTablePaginatorPositionType": {
                    "values": "\"top\" | \"bottom\" | \"both\" | undefined"
                },
                "DataTableResponsiveLayoutType": {
                    "values": "\"stack\" | \"scroll\" | undefined"
                },
                "DataTableRowGroupModeType": {
                    "values": "\"subheader\" | \"rowspan\" | undefined"
                },
                "DataTableScrollDirectionType": {
                    "values": "\"vertical\" | \"horizontal\" | \"both\" | undefined"
                },
                "DataTableScrollHeightType": {
                    "values": "\"flex\" | string | undefined"
                },
                "DataTableSelectionModeType": {
                    "values": "\"single\" | \"multiple\" | undefined"
                },
                "DataTableSortFieldType": {
                    "values": "string | Function | undefined | null"
                },
                "DataTableSortModeType": {
                    "values": "\"single\" | \"multiple\" | undefined"
                },
                "DataTableSortOrderType": {
                    "values": "1 | 0 | -1 | undefined | null"
                },
                "DataTableStateStorageType": {
                    "values": "\"session\" | \"local\" | undefined"
                }
            }
        }
    },
    "dataview/DataView": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "DataViewPageEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of first record"
                        },
                        {
                            "name": "page",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "New page number"
                        },
                        {
                            "name": "pageCount",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Total number of pages"
                        },
                        {
                            "name": "rows",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display in new page"
                        }
                    ],
                    "methods": []
                },
                "DataViewProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "alwaysShowPaginator",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show it even there is only one page.\nDefault value is true."
                        },
                        {
                            "name": "currentPageReportTemplate",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Template of the current page report element. It displays information about the pagination state. Default value is ({currentPage} of {totalPages}) whereas available placeholders are the following;\n\n- {currentPage}\n- {totalPages}\n- {rows}\n- {first}\n- {last}\n- {totalRecords}"
                        },
                        {
                            "name": "dataKey",
                            "optional": false,
                            "readonly": false,
                            "type": "undefined | string",
                            "default": "",
                            "description": "Name of the data that uniquely identifies the a record in the data."
                        },
                        {
                            "name": "first",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the first record to render.\nDefault value is 0."
                        },
                        {
                            "name": "layout",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Layout of the items, valid values are 'list' and 'grid'."
                        },
                        {
                            "name": "lazy",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if data is loaded and interacted with in lazy manner."
                        },
                        {
                            "name": "pageLinkSize",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of page links to display.\nDefault value is 5."
                        },
                        {
                            "name": "paginator",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified as true, enables the pagination."
                        },
                        {
                            "name": "paginatorPosition",
                            "optional": true,
                            "readonly": false,
                            "type": "DataTablePositionType",
                            "default": "",
                            "description": "Position of the paginator, options are 'top','bottom' or 'both'."
                        },
                        {
                            "name": "paginatorTemplate",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Template of the paginator. It can be customized using the template property using the predefined keys, default value is 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown'. Here are the available elements that can be placed inside a paginator in any order.\n\n- FirstPageLink\n- PrevPageLink\n- PageLinks\n- NextPageLink\n- LastPageLink\n- RowsPerPageDropdown\n- JumpToPageDropdown\n- JumpToPageInput\n- CurrentPageReport"
                        },
                        {
                            "name": "rows",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display per page.\nDefault value is 0."
                        },
                        {
                            "name": "rowsPerPageOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "number[]",
                            "default": "",
                            "description": "Array of integer values to display inside rows per page dropdown."
                        },
                        {
                            "name": "sortField",
                            "optional": true,
                            "readonly": false,
                            "type": "DataViewSortFieldType",
                            "default": "",
                            "description": "Property name or a getter function of data to use in sorting by default."
                        },
                        {
                            "name": "sortOrder",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Order to sort the data by default."
                        },
                        {
                            "name": "totalRecords",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of total records, defaults to length of value when not defined."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "An array of objects to display."
                        }
                    ],
                    "methods": []
                },
                "DataViewSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "empty",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "grid",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "list",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "paginatorend",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "paginatorstart",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "DataViewEmits": {
                    "values": "{\n    \"page\": \"Function, \",\n    \"update:first\": \"Function, \",\n    \"update:rows\": \"Function, \"\n}"
                }
            }
        }
    },
    "dataviewlayoutoptions/DataViewLayoutOptions": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "DataViewLayoutOptionsProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Value of the component."
                        }
                    ],
                    "methods": []
                },
                "DataViewLayoutOptionsSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "DataViewLayoutOptionsEmits": {
                    "values": "{\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "deferredcontent/DeferredContent": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "DeferredContentProps": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                },
                "DeferredContentSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "DeferredContentEmits": {
                    "values": "{\n    \"load\": \"Function, \"\n}"
                }
            }
        }
    },
    "dialog/Dialog": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "DialogBreakpoints": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "string"
                        }
                    ],
                    "methods": []
                },
                "DialogProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "DialogAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the dialog gets attached. Special keywords are 'body' for document body and 'self' for the element itself."
                        },
                        {
                            "name": "autoZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to automatically manage layering.\nDefault value is true."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "breakpoints",
                            "optional": true,
                            "readonly": false,
                            "type": "DialogBreakpoints",
                            "default": "",
                            "description": "Object literal to define widths per screen size."
                        },
                        {
                            "name": "closable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Adds a close icon to the header to hide the dialog.\nDefault value is true."
                        },
                        {
                            "name": "closeIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the dialog close button.\nDefault value is 'pi pi-times'."
                        },
                        {
                            "name": "closeOnEscape",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Specifies if pressing escape key should hide the dialog.\nDefault value is true."
                        },
                        {
                            "name": "contentClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the content section."
                        },
                        {
                            "name": "contentProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to the overlay panel inside the component."
                        },
                        {
                            "name": "contentStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style of the content section."
                        },
                        {
                            "name": "dismissableMask",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Specifies if clicking the modal background should hide the dialog."
                        },
                        {
                            "name": "draggable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Enables dragging to change the position using header.\nDefault value is true."
                        },
                        {
                            "name": "footer",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Footer content of the dialog."
                        },
                        {
                            "name": "header",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Title content of the dialog."
                        },
                        {
                            "name": "keepInViewPort",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Keeps dialog in the viewport when dragging.\nDefault value is true."
                        },
                        {
                            "name": "maximizable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the dialog can be displayed full screen."
                        },
                        {
                            "name": "maximizeIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the dialog maximize button when dialog is not maximized.\nDefault value is 'pi pi-window-maximize'."
                        },
                        {
                            "name": "minX",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Minimum value for the left coordinate of dialog in dragging.\nDefault value is 0."
                        },
                        {
                            "name": "minY",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Minimum value for the top coordinate of dialog in dragging.\nDefault value is 0."
                        },
                        {
                            "name": "minimizeIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the dialog maximize button when dialog is maximized.\nDefault value is 'pi pi-window-minimize'."
                        },
                        {
                            "name": "modal",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if background should be blocked when dialog is displayed."
                        },
                        {
                            "name": "position",
                            "optional": true,
                            "readonly": false,
                            "type": "DialogPositionType",
                            "default": "",
                            "description": "Position of the dialog, options are 'center', 'top', 'bottom', 'left', 'right', 'topleft', 'topright', 'bottomleft' or 'bottomright'."
                        },
                        {
                            "name": "rtl",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled dialog is displayed in RTL direction."
                        },
                        {
                            "name": "showHeader",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show the header or not.\nDefault value is true."
                        },
                        {
                            "name": "style",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style of the dynamic dialog."
                        },
                        {
                            "name": "visible",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Specifies the visibility of the dialog."
                        }
                    ],
                    "methods": []
                },
                "DialogSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "DialogEmits": {
                    "values": "{\n    \"after-hide\": \"Function, \",\n    \"dragend\": \"Function, \",\n    \"hide\": \"Function, \",\n    \"maximize\": \"Function, \",\n    \"show\": \"Function, \",\n    \"unmaximize\": \"Function, \",\n    \"update:visible\": \"Function, \"\n}"
                }
            }
        }
    },
    "dialogservice/DialogService": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "DialogServiceMethods": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "open",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        }
    },
    "divider/Divider": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "DividerProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "align",
                            "optional": true,
                            "readonly": false,
                            "type": "DividerAlignType",
                            "default": "",
                            "description": "Alignment of the content, options are 'left', 'center', 'right' for horizontal layout and 'top', 'center', 'bottom' for vertical."
                        },
                        {
                            "name": "layout",
                            "optional": true,
                            "readonly": false,
                            "type": "DividerLayoutType",
                            "default": "",
                            "description": "Specifies the orientation, valid values are 'horizontal' and 'vertical'."
                        },
                        {
                            "name": "type",
                            "optional": true,
                            "readonly": false,
                            "type": "DividerType",
                            "default": "",
                            "description": "Border style type."
                        }
                    ],
                    "methods": []
                },
                "DividerSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "DividerEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "dock/Dock": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "DockProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "class",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the element."
                        },
                        {
                            "name": "exact",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to apply 'router-link-active-exact' class if route exactly matches the item path.\nDefault value is true."
                        },
                        {
                            "name": "menuId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Unique identifier of the menu."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "MenuModel instance to define the action items."
                        },
                        {
                            "name": "position",
                            "optional": true,
                            "readonly": false,
                            "type": "DockPositionType",
                            "default": "",
                            "description": "Position of element."
                        },
                        {
                            "name": "style",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the element."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        },
                        {
                            "name": "tooltipOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "DockTooltipOptions",
                            "default": "",
                            "description": "Whether to display the tooltip on items. The modifiers of Tooltip can be used like an object in it. Valid keys are 'event' and 'position'."
                        }
                    ],
                    "methods": []
                },
                "DockSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "icon",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "DockTooltipOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "event",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Event to show the tooltip, valid values are hover and focus."
                        },
                        {
                            "name": "position",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Position of element."
                        },
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "string"
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "DockEmits": {
                    "values": "{\n    \"blur\": \"Function, \",\n    \"focus\": \"Function, \"\n}"
                }
            }
        }
    },
    "dropdown/Dropdown": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "DropdownChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected option value"
                        }
                    ],
                    "methods": []
                },
                "DropdownFilterEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Filter value"
                        }
                    ],
                    "methods": []
                },
                "DropdownProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "DropdownAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are 'body' for document body and 'self' for the element itself."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "autoFilterFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to focus on the filter element when the overlay panel is shown.\nDefault value is false."
                        },
                        {
                            "name": "autoOptionFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to focus on the first visible or selected element when the overlay panel is shown.\nDefault value is true."
                        },
                        {
                            "name": "clearIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in clear button.\nDefault value is 'pi pi-times'."
                        },
                        {
                            "name": "clearIconProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLElement to the clear icon inside the component."
                        },
                        {
                            "name": "dataKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "A property to uniquely identify an option."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "dropdownIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the dropdown.\nDefault value is 'pi pi-chevron-down'."
                        },
                        {
                            "name": "editable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, custom value instead of predefined options can be entered using the editable input field."
                        },
                        {
                            "name": "emptyFilterMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to display when filtering does not return any results. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No results found'."
                        },
                        {
                            "name": "emptyMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to display when there are no options available. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No results found'."
                        },
                        {
                            "name": "emptySelectionMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when any option is not selected. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No selected item'."
                        },
                        {
                            "name": "filter",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified, displays a filter input at header."
                        },
                        {
                            "name": "filterFields",
                            "optional": true,
                            "readonly": false,
                            "type": "string[]",
                            "default": "",
                            "description": "Fields used when filtering the options, defaults to optionLabel."
                        },
                        {
                            "name": "filterIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in filter input.\nDefault value is 'pi pi-search'."
                        },
                        {
                            "name": "filterInputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the filter input inside the component."
                        },
                        {
                            "name": "filterLocale",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Locale to use in filtering. The default locale is the host environment's current locale."
                        },
                        {
                            "name": "filterMatchMode",
                            "optional": true,
                            "readonly": false,
                            "type": "DropdownFilterMatchModeType",
                            "default": "",
                            "description": "Defines the filtering algorithm to use when searching the options."
                        },
                        {
                            "name": "filterMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when filtering returns any results. Defaults to value from PrimeVue locale configuration.\nDefault value is '{0} results are available'."
                        },
                        {
                            "name": "filterPlaceholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Placeholder text to show when filter input is empty."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes | InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement/HTMLSpanElement to the focusable input element inside the component."
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "loading",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the dropdown is in loading state."
                        },
                        {
                            "name": "loadingIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in loading state.\nDefault value is 'pi pi-spinner pi-spin'."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "optionDisabled",
                            "optional": true,
                            "readonly": false,
                            "type": "DropdownOptionDisabledType",
                            "default": "",
                            "description": "Property name or getter function to use as the disabled flag of an option, defaults to false when not defined."
                        },
                        {
                            "name": "optionGroupChildren",
                            "optional": true,
                            "readonly": false,
                            "type": "DropdownOptionChildrenType",
                            "default": "",
                            "description": "Property name or getter function that refers to the children options of option group."
                        },
                        {
                            "name": "optionGroupLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "DropdownOptionLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an option group."
                        },
                        {
                            "name": "optionLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "DropdownOptionLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an option."
                        },
                        {
                            "name": "optionValue",
                            "optional": true,
                            "readonly": false,
                            "type": "DropdownOptionValueType",
                            "default": "",
                            "description": "Property name or getter function to use as the value of an option, defaults to the option itself when not defined."
                        },
                        {
                            "name": "options",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "An array of selectitems to display as the available options."
                        },
                        {
                            "name": "panelClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the overlay panel."
                        },
                        {
                            "name": "panelProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to the overlay panel inside the component."
                        },
                        {
                            "name": "panelStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the overlay panel."
                        },
                        {
                            "name": "placeholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Default text to display when no option is selected."
                        },
                        {
                            "name": "resetFilterOnHide",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Clears the filter value when hiding the dropdown."
                        },
                        {
                            "name": "scrollHeight",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Height of the viewport, a scrollbar is defined if height of list exceeds this value.\nDefault value is '200px'."
                        },
                        {
                            "name": "selectOnFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, the focused option is selected.\nDefault value is false."
                        },
                        {
                            "name": "selectionMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when options are selected. Defaults to value from PrimeVue locale configuration.\nDefault value is '{0} items selected'."
                        },
                        {
                            "name": "showClear",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, a clear icon is displayed to clear the value."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        },
                        {
                            "name": "virtualScrollerOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "VirtualScrollerProps",
                            "default": "",
                            "description": "Whether to use the virtualScroller feature. The properties of VirtualScroller component can be used like an object in it."
                        }
                    ],
                    "methods": []
                },
                "DropdownSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "content",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "empty",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "emptyfilter",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "indicator",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "loader",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "option",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "optiongroup",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "DropdownEmits": {
                    "values": "{\n    \"before-hide\": \"Function, \",\n    \"before-show\": \"Function, \",\n    \"blur\": \"Function, \",\n    \"change\": \"Function, \",\n    \"filter\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"hide\": \"Function, \",\n    \"show\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "dynamicdialog/DynamicDialog": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "DynamicDialogProps": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                },
                "DynamicDialogSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "DynamicDialogEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "dynamicdialogoptions/DynamicDialogOptions": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "DynamicDialogCloseOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Custom data object"
                        },
                        {
                            "name": "type",
                            "optional": false,
                            "readonly": false,
                            "type": "DynamicDialogCloseType",
                            "default": "",
                            "description": "Close type"
                        }
                    ],
                    "methods": []
                },
                "DynamicDialogInstance": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "close",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "content",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Dynamic component for content template"
                        },
                        {
                            "name": "data",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Custom data object"
                        },
                        {
                            "name": "options",
                            "optional": false,
                            "readonly": false,
                            "type": "DynamicDialogOptions",
                            "default": "",
                            "description": "Instance options"
                        }
                    ],
                    "methods": []
                },
                "DynamicDialogOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "data",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Custom data object"
                        },
                        {
                            "name": "props",
                            "optional": true,
                            "readonly": false,
                            "type": "DialogProps",
                            "default": "",
                            "description": "Dialog Props"
                        },
                        {
                            "name": "templates",
                            "optional": true,
                            "readonly": false,
                            "type": "DynamicDialogTemplates",
                            "default": "",
                            "description": "Dialog Slots"
                        },
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": [
                        {
                            "name": "onClose",
                            "parameters": [
                                {
                                    "name": "options",
                                    "optional": true,
                                    "type": "DynamicDialogCloseOptions"
                                }
                            ],
                            "returnType": "void",
                            "description": "Closes the dialog."
                        }
                    ]
                },
                "DynamicDialogTemplates": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "footer",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Custom footer template."
                        },
                        {
                            "name": "header",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Custom header template."
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "DynamicDialogCloseType": {
                    "values": "\"config-close\" | \"dialog-close\" | undefined"
                }
            }
        }
    },
    "editor/Editor": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "EditorLoadEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "instance",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Text editor instance."
                        }
                    ],
                    "methods": []
                },
                "EditorProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "editorStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the container."
                        },
                        {
                            "name": "formats",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Whitelist of formats to display, see [here](https://quilljs.com/docs/formats/) for available options."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Value of the content."
                        },
                        {
                            "name": "modules",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Modules configuration, see [here](https://quilljs.com/docs/modules/) for available options."
                        },
                        {
                            "name": "placeholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Placeholder text to show when editor is empty."
                        },
                        {
                            "name": "readonly",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to instantiate the editor to readonly mode."
                        }
                    ],
                    "methods": []
                },
                "EditorSelectionChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "htmlValue",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Current value as html."
                        },
                        {
                            "name": "instance",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Text editor instance."
                        },
                        {
                            "name": "oldRange",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Representation of the previous selection boundaries."
                        },
                        {
                            "name": "range",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Representation of the selection boundaries."
                        },
                        {
                            "name": "source",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Source of change. Will be either 'user' or 'api'."
                        },
                        {
                            "name": "textValue",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Current value as text."
                        }
                    ],
                    "methods": []
                },
                "EditorSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "toolbar",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "EditorTextChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "delta",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Representation of the change."
                        },
                        {
                            "name": "htmlValue",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Current value as html."
                        },
                        {
                            "name": "instance",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Text editor instance."
                        },
                        {
                            "name": "source",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Source of change. Will be either 'user' or 'api'."
                        },
                        {
                            "name": "textValue",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Current value as text."
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "EditorEmits": {
                    "values": "{\n    \"load\": \"Function, \",\n    \"selection-change\": \"Function, \",\n    \"text-change\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "fieldset/Fieldset": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "FieldsetProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "collapsed",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines the default visibility state of the content."
                        },
                        {
                            "name": "legend",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Header text of the fieldset."
                        },
                        {
                            "name": "toggleButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "object",
                            "default": "",
                            "description": "Uses to pass the custom value to read for the anchor inside the component."
                        },
                        {
                            "name": "toggleable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified, content can toggled by clicking the legend."
                        }
                    ],
                    "methods": []
                },
                "FieldsetSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "legend",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "FieldsetToggleEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Collapsed state as a boolean"
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "FieldsetEmits": {
                    "values": "{\n    \"toggle\": \"Function, \",\n    \"update:collapsed\": \"Function, \"\n}"
                }
            }
        }
    },
    "fileupload/FileUpload": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "FileUploadBeforeSendEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "formData",
                            "optional": false,
                            "readonly": false,
                            "type": "FormData",
                            "default": "",
                            "description": "FormData object."
                        },
                        {
                            "name": "xhr",
                            "optional": false,
                            "readonly": false,
                            "type": "XMLHttpRequest",
                            "default": "",
                            "description": "XmlHttpRequest instance."
                        }
                    ],
                    "methods": []
                },
                "FileUploadBeforeUploadEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "formData",
                            "optional": false,
                            "readonly": false,
                            "type": "FormData",
                            "default": "",
                            "description": "FormData object."
                        },
                        {
                            "name": "xhr",
                            "optional": false,
                            "readonly": false,
                            "type": "XMLHttpRequest",
                            "default": "",
                            "description": "XmlHttpRequest instance."
                        }
                    ],
                    "methods": []
                },
                "FileUploadErrorEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "files",
                            "optional": false,
                            "readonly": false,
                            "type": "File | File[]",
                            "default": "",
                            "description": "Files that are not uploaded."
                        },
                        {
                            "name": "xhr",
                            "optional": false,
                            "readonly": false,
                            "type": "XMLHttpRequest",
                            "default": "",
                            "description": "XmlHttpRequest instance."
                        }
                    ],
                    "methods": []
                },
                "FileUploadProgressEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "progress",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Calculated progress value."
                        }
                    ],
                    "methods": []
                },
                "FileUploadProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "accept",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Pattern to restrict the allowed file types such as 'image/*'."
                        },
                        {
                            "name": "auto",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, upload begins automatically after selection is completed."
                        },
                        {
                            "name": "cancelIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the cancel button."
                        },
                        {
                            "name": "cancelLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Label of the cancel button. Defaults to PrimeVue Locale configuration.\nDefault value is 'Cancel'."
                        },
                        {
                            "name": "chooseIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the choose button."
                        },
                        {
                            "name": "chooseLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Label of the choose button. Defaults to PrimeVue Locale configuration."
                        },
                        {
                            "name": "class",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the component."
                        },
                        {
                            "name": "customUpload",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to use the default upload or a manual implementation defined in uploadHandler callback. Defaults to PrimeVue Locale configuration."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Disables the upload functionality."
                        },
                        {
                            "name": "fileLimit",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Maximum number of files that can be uploaded."
                        },
                        {
                            "name": "invalidFileLimitMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Message to display when number of files to be uploaded exceeeds the limit.\nDefault value is 'Maximum number of files exceeded, limit is {0} at most.'."
                        },
                        {
                            "name": "invalidFileSizeMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Message of the invalid fize size.\nDefault value is '{0}: Invalid file size, file size should be smaller than {1}.'."
                        },
                        {
                            "name": "invalidFileTypeMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Message of the invalid fize type.\nDefault value is '{0}: Invalid file type, allowed file types: {1}.'."
                        },
                        {
                            "name": "maxFileSize",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Maximum file size allowed in bytes."
                        },
                        {
                            "name": "mode",
                            "optional": true,
                            "readonly": false,
                            "type": "FileUploadModeType",
                            "default": "",
                            "description": "Defines the UI of the component, possible values are 'advanced' and 'basic'."
                        },
                        {
                            "name": "multiple",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Used to select multiple files at once from file dialog."
                        },
                        {
                            "name": "name",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Name of the request parameter to identify the files at backend."
                        },
                        {
                            "name": "previewWidth",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Width of the image thumbnail in pixels.\nDefault value is 50."
                        },
                        {
                            "name": "showCancelButton",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show the cancel button.\nDefault value is true."
                        },
                        {
                            "name": "showUploadButton",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show the upload button.\nDefault value is true."
                        },
                        {
                            "name": "style",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the component."
                        },
                        {
                            "name": "uploadIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the upload button."
                        },
                        {
                            "name": "uploadLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Label of the upload button. Defaults to PrimeVue Locale configuration.\nDefault value is 'Upload'."
                        },
                        {
                            "name": "url",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Remote url to upload the files."
                        },
                        {
                            "name": "withCredentials",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates."
                        }
                    ],
                    "methods": []
                },
                "FileUploadRemoveEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "file",
                            "optional": false,
                            "readonly": false,
                            "type": "File",
                            "default": "",
                            "description": "Removed file."
                        },
                        {
                            "name": "files",
                            "optional": false,
                            "readonly": false,
                            "type": "File[]",
                            "default": "",
                            "description": "Remaining files to be uploaded."
                        }
                    ],
                    "methods": []
                },
                "FileUploadRemoveUploadedFile": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "file",
                            "optional": false,
                            "readonly": false,
                            "type": "File",
                            "default": "",
                            "description": "Removed file."
                        },
                        {
                            "name": "files",
                            "optional": false,
                            "readonly": false,
                            "type": "File[]",
                            "default": "",
                            "description": "Remaining files to be uploaded."
                        }
                    ],
                    "methods": []
                },
                "FileUploadSelectEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "files",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "List of selected files."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        }
                    ],
                    "methods": []
                },
                "FileUploadSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "content",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "empty",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "FileUploadUploadEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "files",
                            "optional": false,
                            "readonly": false,
                            "type": "File | File[]",
                            "default": "",
                            "description": "Files that are not uploaded."
                        },
                        {
                            "name": "xhr",
                            "optional": false,
                            "readonly": false,
                            "type": "XMLHttpRequest",
                            "default": "",
                            "description": "XmlHttpRequest instance."
                        }
                    ],
                    "methods": []
                },
                "FileUploadUploaderEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "files",
                            "optional": false,
                            "readonly": false,
                            "type": "File | File[]",
                            "default": "",
                            "description": "List of selected files."
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "FileUploadEmits": {
                    "values": "{\n    \"before-send\": \"Function, \",\n    \"before-upload\": \"Function, \",\n    \"clear\": \"Function, \",\n    \"error\": \"Function, \",\n    \"progress\": \"Function, \",\n    \"remove\": \"Function, \",\n    \"removeUploadedFile\": \"Function, \",\n    \"select\": \"Function, \",\n    \"upload\": \"Function, \",\n    \"uploader\": \"Function, \"\n}"
                }
            }
        }
    },
    "focustrap/FocusTrap": {},
    "fullcalendar/FullCalendar": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "FullCalendarProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "events",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": ""
                        },
                        {
                            "name": "options",
                            "optional": true,
                            "readonly": false,
                            "type": "object",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "FullCalendarSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "FullCalendarEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "galleria/Galleria": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "GalleriaProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "activeIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the first item.\nDefault value is 0."
                        },
                        {
                            "name": "autoPlay",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Items are displayed with a slideshow in autoPlay mode."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "changeItemOnIndicatorHover",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, item is changed on indicator hover."
                        },
                        {
                            "name": "circular",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if scrolling would be infinite."
                        },
                        {
                            "name": "containerClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the component on fullscreen mode. Otherwise, the 'class' property can be used."
                        },
                        {
                            "name": "containerProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to the container element on fullscreen mode."
                        },
                        {
                            "name": "containerStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the component on fullscreen mode. Otherwise, the 'style' property can be used."
                        },
                        {
                            "name": "fullScreen",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display the component on fullscreen."
                        },
                        {
                            "name": "id",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Unique identifier of the element."
                        },
                        {
                            "name": "indicatorsPosition",
                            "optional": true,
                            "readonly": false,
                            "type": "GalleriaIndicatorsPositionType",
                            "default": "",
                            "description": "Position of indicators."
                        },
                        {
                            "name": "maskClass",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the mask on fullscreen mode."
                        },
                        {
                            "name": "nextButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the next navigation button."
                        },
                        {
                            "name": "numVisible",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of items per page."
                        },
                        {
                            "name": "prevButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the previous navigation button."
                        },
                        {
                            "name": "responsiveOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "GalleriaResponsiveOptions[]",
                            "default": "",
                            "description": "An array of options for responsive design."
                        },
                        {
                            "name": "showIndicators",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display indicator container."
                        },
                        {
                            "name": "showIndicatorsOnItem",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, indicator container is displayed on item container."
                        },
                        {
                            "name": "showItemNavigators",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display navigation buttons in item section."
                        },
                        {
                            "name": "showItemNavigatorsOnHover",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display navigation buttons on item hover."
                        },
                        {
                            "name": "showThumbnailNavigators",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display navigation buttons in thumbnail container.\nDefault value is true."
                        },
                        {
                            "name": "showThumbnails",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display thumbnail container.\nDefault value is true."
                        },
                        {
                            "name": "thumbnailsPosition",
                            "optional": true,
                            "readonly": false,
                            "type": "GalleriaThumbnailsPositionType",
                            "default": "",
                            "description": "Position of thumbnails."
                        },
                        {
                            "name": "transitionInterval",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Time in milliseconds to scroll items.\nDefault value is 4000."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "An array of objects to display."
                        },
                        {
                            "name": "verticalThumbnailViewPortHeight",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Height of the viewport in vertical thumbnail.\nDefault value is '300px'."
                        },
                        {
                            "name": "visible",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Specifies the visibility of the mask on fullscreen mode."
                        }
                    ],
                    "methods": []
                },
                "GalleriaResponsiveOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "breakpoint",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Breakpoint for responsive mode. Exp;"
                        },
                        {
                            "name": "numVisible",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "The number of visible items on breakpoint."
                        }
                    ],
                    "methods": []
                },
                "GalleriaSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "caption",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "indicator",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "thumbnail",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "GalleriaEmits": {
                    "values": "{\n    \"update:activeIndex\": \"Function, \",\n    \"update:visible\": \"Function, \"\n}"
                }
            }
        }
    },
    "image/Image": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ImageProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "imageClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the image element."
                        },
                        {
                            "name": "imageStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the image element."
                        },
                        {
                            "name": "preview",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Controls the preview functionality."
                        }
                    ],
                    "methods": []
                },
                "ImageSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "indicator",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ImageEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "inlinemessage/InlineMessage": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "InlineMessageProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "severity",
                            "optional": true,
                            "readonly": false,
                            "type": "InlineMessageSeverityType",
                            "default": "",
                            "description": "Severity level of the message."
                        }
                    ],
                    "methods": []
                },
                "InlineMessageSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "InlineMessageEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "inplace/Inplace": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "InplaceProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "active",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the content is displayed or not."
                        },
                        {
                            "name": "closable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Displays a button to switch back to display mode."
                        },
                        {
                            "name": "closeButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the close button."
                        },
                        {
                            "name": "closeIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the close button.\nDefault value is 'pi pi-times'."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the element should be disabled."
                        },
                        {
                            "name": "displayProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to display container."
                        }
                    ],
                    "methods": []
                },
                "InplaceSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "content",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "display",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "InplaceEmits": {
                    "values": "{\n    \"close\": \"Function, \",\n    \"open\": \"Function, \",\n    \"update:active\": \"Function, \"\n}"
                }
            }
        }
    },
    "inputmask/InputMask": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "InputMaskProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "autoClear",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Clears the incomplete value on blur.\nDefault value is true."
                        },
                        {
                            "name": "mask",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Mask pattern."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "slotChar",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Placeholder character in mask, default is underscore.\nDefault value is '_'."
                        },
                        {
                            "name": "unmask",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if model sets the raw unmasked value to bound value or the formatted mask value."
                        }
                    ],
                    "methods": []
                },
                "InputMaskSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "InputMaskEmits": {
                    "values": "{\n    \"blur\": \"Function, \",\n    \"complete\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"keydown\": \"Function, \",\n    \"keypress\": \"Function, \",\n    \"paste\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "inputnumber/InputNumber": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "InputNumberBlurEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Input value"
                        }
                    ],
                    "methods": []
                },
                "InputNumberInputEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "undefined | string | number",
                            "default": "",
                            "description": "New value"
                        }
                    ],
                    "methods": []
                },
                "InputNumberProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "allowEmpty",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Determines whether the input field is empty.\nDefault value is true."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "buttonLayout",
                            "optional": true,
                            "readonly": false,
                            "type": "InputNumberButtonLayoutType",
                            "default": "",
                            "description": "Layout of the buttons."
                        },
                        {
                            "name": "currency",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "The currency to use in currency formatting. Possible values are the [ISO 4217 currency codes](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency), such as 'USD' for the US dollar, 'EUR' for the euro, or 'CNY' for the Chinese RMB.\nThere is no default value; if the style is 'currency', the currency property must be provided."
                        },
                        {
                            "name": "currencyDisplay",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "How to display the currency in currency formatting. Possible values are 'symbol' to use a localized currency symbol such as €, 'code' to use the ISO currency code, 'name' to use a localized currency name such as 'dollar'.\nDefault value is 'symbol'."
                        },
                        {
                            "name": "decrementButtonClass",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the decrement button."
                        },
                        {
                            "name": "decrementButtonIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the decrement button.\nDefault value is 'pi pi-angle-down'."
                        },
                        {
                            "name": "decrementButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to decrement button inside the component."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "format",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to format the value."
                        },
                        {
                            "name": "highlightOnFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Highlights automatically the input value.\nDefault value is false."
                        },
                        {
                            "name": "incrementButtonClass",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the increment button."
                        },
                        {
                            "name": "incrementButtonIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the increment button.\nDefault value is 'pi pi-angle-up'."
                        },
                        {
                            "name": "incrementButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to increment button inside the component."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the focus input to match a label defined for the chips."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "locale",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Locale to be used in formatting."
                        },
                        {
                            "name": "localeMatcher",
                            "optional": true,
                            "readonly": false,
                            "type": "InputNumberLocaleMatcherType",
                            "default": "",
                            "description": "The locale matching algorithm to use. Possible values are 'lookup' and 'best fit'; the default is 'best fit'.\nSee [Locale Negotation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_negotiation) for details."
                        },
                        {
                            "name": "max",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Maximum boundary value."
                        },
                        {
                            "name": "maxFractionDigits",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "The maximum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number formatting is the larger of minimumFractionDigits and 3;\nthe default for currency formatting is the larger of minimumFractionDigits and the number of minor unit digits provided by the [ISO 4217 currency code](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency) list (2 if the list doesn't provide that information)."
                        },
                        {
                            "name": "min",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Mininum boundary value."
                        },
                        {
                            "name": "minFractionDigits",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "The minimum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number and percent formatting is 0;\nthe default for currency formatting is the number of minor unit digits provided by the [ISO 4217 currency code](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency) list (2 if the list doesn't provide that information)."
                        },
                        {
                            "name": "mode",
                            "optional": true,
                            "readonly": false,
                            "type": "InputNumberModeType",
                            "default": "",
                            "description": "Defines the behavior of the component."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "Nullable<number>",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "placeholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Placeholder text for the input."
                        },
                        {
                            "name": "prefix",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to display before the value."
                        },
                        {
                            "name": "readonly",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that an input field is read-only."
                        },
                        {
                            "name": "showButtons",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Displays spinner buttons."
                        },
                        {
                            "name": "step",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Step factor to increment/decrement the value.\nDefault value is 1."
                        },
                        {
                            "name": "suffix",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to display after the value."
                        },
                        {
                            "name": "useGrouping",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators.\nDefault value is true."
                        }
                    ],
                    "methods": []
                },
                "InputNumberSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "InputNumberEmits": {
                    "values": "{\n    \"blur\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"input\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "inputswitch/InputSwitch": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "InputSwitchProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "falseValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value in unchecked state."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "string | boolean",
                            "default": "",
                            "description": "Specifies whether a inputswitch should be checked or not."
                        },
                        {
                            "name": "trueValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value in checked state."
                        }
                    ],
                    "methods": []
                },
                "InputSwitchSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "InputSwitchEmits": {
                    "values": "{\n    \"change\": \"Function, \",\n    \"click\": \"Function, \",\n    \"input\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "inputtext/InputText": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "InputTextProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "Nullable<string>",
                            "default": "",
                            "description": "Value of the component."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "InputHTMLAttributes"
                },
                "InputTextSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "InputTextEmits": {
                    "values": "{\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "knob": {
        "description": "Knob is a form component to define number inputs with a dial.\n\n[Live Demo](https://www.primevue.org/knob/)",
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "KnobEmits": {
                    "description": "Defines valid emits in Knob component.",
                    "relatedProp": "",
                    "props": [],
                    "methods": [
                        {
                            "name": "change",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "number"
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when the value changes."
                        },
                        {
                            "name": "update:modelValue",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "number"
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the value changes."
                        }
                    ]
                },
                "KnobProps": {
                    "description": "Defines valid properties in Knob component. In addition to these, all properties of HTMLDivElement can be used in this component.",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Used to define a string that labels the element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "max",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "100",
                            "description": "Maximum boundary value."
                        },
                        {
                            "name": "min",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "0",
                            "description": "Mininum boundary value."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "rangeColor",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Background color of the range."
                        },
                        {
                            "name": "readonly",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component value cannot be edited."
                        },
                        {
                            "name": "showValue",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the show the value inside the knob."
                        },
                        {
                            "name": "size",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "100",
                            "description": "Size of the component in pixels."
                        },
                        {
                            "name": "step",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Step factor to increment/decrement the value."
                        },
                        {
                            "name": "strokeWidth",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "100",
                            "description": "Width of the knob stroke."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        },
                        {
                            "name": "textColor",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Color of the value text."
                        },
                        {
                            "name": "valueColor",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Background of the value."
                        },
                        {
                            "name": "valueTemplate",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Template string of the value."
                        }
                    ],
                    "methods": []
                },
                "KnobSlots": {
                    "description": "Defines valid slots in Knob component.",
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        }
    },
    "listbox/Listbox": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ListboxChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Original event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected option value"
                        }
                    ],
                    "methods": []
                },
                "ListboxFilterEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Original event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Filter value"
                        }
                    ],
                    "methods": []
                },
                "ListboxProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "autoOptionFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to focus on the first visible or selected element.\nDefault value is true."
                        },
                        {
                            "name": "dataKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "A property to uniquely identify an option."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified, disables the component."
                        },
                        {
                            "name": "emptyFilterMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to display when filtering does not return any results. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No results found'."
                        },
                        {
                            "name": "emptyMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to display when there are no options available. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No results found'."
                        },
                        {
                            "name": "emptySelectionMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when any option is not selected. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No selected item'."
                        },
                        {
                            "name": "filter",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified, displays a filter input at header."
                        },
                        {
                            "name": "filterFields",
                            "optional": true,
                            "readonly": false,
                            "type": "string[]",
                            "default": "",
                            "description": "Fields used when filtering the options, defaults to optionLabel."
                        },
                        {
                            "name": "filterIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in filter input.\nDefault value is 'pi pi-search'."
                        },
                        {
                            "name": "filterInputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the filter input inside the component."
                        },
                        {
                            "name": "filterLocale",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Locale to use in filtering. The default locale is the host environment's current locale."
                        },
                        {
                            "name": "filterMatchMode",
                            "optional": true,
                            "readonly": false,
                            "type": "ListboxFilterMatchModeType",
                            "default": "",
                            "description": "Defines the filtering algorithm to use when searching the options."
                        },
                        {
                            "name": "filterMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when filtering returns any results. Defaults to value from PrimeVue locale configuration.\nDefault value is '{0} results are available'."
                        },
                        {
                            "name": "filterPlaceholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Placeholder text to show when filter input is empty."
                        },
                        {
                            "name": "listStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Inline style of inner list element."
                        },
                        {
                            "name": "metaKeySelection",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually.\nOn touch enabled devices, metaKeySelection is turned off automatically.\nDefault value is true."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "multiple",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified, allows selecting multiple values."
                        },
                        {
                            "name": "optionDisabled",
                            "optional": true,
                            "readonly": false,
                            "type": "ListboxOptionDisabledType",
                            "default": "",
                            "description": "Property name or getter function to use as the disabled flag of an option, defaults to false when not defined."
                        },
                        {
                            "name": "optionGroupChildren",
                            "optional": true,
                            "readonly": false,
                            "type": "ListboxOptionChildrenType",
                            "default": "",
                            "description": "Property name or getter function that refers to the children options of option group."
                        },
                        {
                            "name": "optionGroupLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "ListboxOptionLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an option group."
                        },
                        {
                            "name": "optionLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "ListboxOptionLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an option."
                        },
                        {
                            "name": "optionValue",
                            "optional": true,
                            "readonly": false,
                            "type": "ListboxOptionValueType",
                            "default": "",
                            "description": "Property name or getter function to use as the value of an option, defaults to the option itself when not defined."
                        },
                        {
                            "name": "options",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "An array of selectitems to display as the available options."
                        },
                        {
                            "name": "selectOnFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, the focused option is selected.\nDefault value is false."
                        },
                        {
                            "name": "selectionMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when options are selected. Defaults to value from PrimeVue locale configuration.\nDefault value is '{0} items selected'."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        },
                        {
                            "name": "virtualScrollerOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "VirtualScrollerProps",
                            "default": "",
                            "description": "Whether to use the virtualScroller feature. The properties of VirtualScroller component can be used like an object in it."
                        }
                    ],
                    "methods": []
                },
                "ListboxSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "content",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "empty",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "emptyfilter",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "loader",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "option",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "optiongroup",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ListboxEmits": {
                    "values": "{\n    \"blur\": \"Function, \",\n    \"change\": \"Function, \",\n    \"filter\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "megamenu/MegaMenu": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "MegaMenuProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying menu element."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "exact",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to apply 'router-link-active-exact' class if route exactly matches the item path.\nDefault value is true."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "An array of menuitems."
                        },
                        {
                            "name": "orientation",
                            "optional": true,
                            "readonly": false,
                            "type": "MegaMenuOrientationType",
                            "default": "",
                            "description": "Defines the orientation."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "MegaMenuSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "end",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "start",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "MegaMenuEmits": {
                    "values": "{\n    \"blur\": \"Function, \",\n    \"focus\": \"Function, \"\n}"
                }
            }
        }
    },
    "menu/Menu": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "MenuProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "autoZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to automatically manage layering.\nDefault value is true."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "exact",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to apply 'router-link-active-exact' class if route exactly matches the item path.\nDefault value is true."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "An array of menuitems."
                        },
                        {
                            "name": "popup",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if menu would displayed as a popup."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "MenuSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "end",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "start",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "MenuEmits": {
                    "values": "{\n    \"blur\": \"Function, \",\n    \"focus\": \"Function, \"\n}"
                }
            }
        }
    },
    "menubar/Menubar": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "MenubarProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "buttonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the menu button."
                        },
                        {
                            "name": "exact",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to apply 'router-link-active-exact' class if route exactly matches the item path.\nDefault value is true."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "An array of menuitems."
                        }
                    ],
                    "methods": []
                },
                "MenubarSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "end",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "start",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "MenubarEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "menuitem/MenuItem": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "MenuItem": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "class",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the menuitem."
                        },
                        {
                            "name": "command",
                            "optional": true,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItemDisabledType",
                            "default": "",
                            "description": "A boolean or a function to return a boolean to specify if the item is disabled."
                        },
                        {
                            "name": "icon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the item."
                        },
                        {
                            "name": "items",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "An array of children menuitems."
                        },
                        {
                            "name": "key",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Unique identifier of an item."
                        },
                        {
                            "name": "label",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItemLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an item."
                        },
                        {
                            "name": "separator",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines the item as a separator."
                        },
                        {
                            "name": "style",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the menuitem."
                        },
                        {
                            "name": "target",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Specifies where to open the linked document."
                        },
                        {
                            "name": "to",
                            "optional": true,
                            "readonly": false,
                            "type": "RouteLocationRaw",
                            "default": "",
                            "description": "Route configuration such as path, name and parameters."
                        },
                        {
                            "name": "url",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "External link to navigate when item is clicked."
                        },
                        {
                            "name": "visible",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItemVisibleType",
                            "default": "",
                            "description": "A boolean or a function to return a boolean to specify if the item is visible."
                        },
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "MenuItemCommandEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "MenuItem",
                            "default": "",
                            "description": "Menuitem instance."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "MenuItemDisabledType": {
                    "values": "boolean | Function | undefined"
                },
                "MenuItemLabelType": {
                    "values": "string | Function | undefined"
                },
                "MenuItemVisibleType": {
                    "values": "boolean | Function | undefined"
                }
            }
        }
    },
    "message/Message": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "MessageProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "closable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the message can be closed manually using the close icon.\nDefault value is true."
                        },
                        {
                            "name": "closeButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the close button."
                        },
                        {
                            "name": "closeIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the message close button.\nDefault value is 'pi pi-times'."
                        },
                        {
                            "name": "icon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Display a custom icon for the message."
                        },
                        {
                            "name": "life",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Delay in milliseconds to close the message automatically.\nDefault value is 3000."
                        },
                        {
                            "name": "severity",
                            "optional": true,
                            "readonly": false,
                            "type": "MessageSeverityType",
                            "default": "",
                            "description": "Severity level of the message."
                        },
                        {
                            "name": "sticky",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, message is not removed automatically."
                        }
                    ],
                    "methods": []
                },
                "MessageSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "MessageEmits": {
                    "values": "{\n    \"close\": \"Function, \"\n}"
                }
            }
        }
    },
    "multiselect/MultiSelect": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "MultiSelectAllChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "checked",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether all data is selected."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": []
                },
                "MultiSelectChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Selected option value"
                        }
                    ],
                    "methods": []
                },
                "MultiSelectFilterEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Original event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Filter value"
                        }
                    ],
                    "methods": []
                },
                "MultiSelectProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "MultiSelectAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are 'body' for document body and 'self' for the element itself."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "autoFilterFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to focus on the filter element when the overlay panel is shown.\nDefault value is false."
                        },
                        {
                            "name": "autoOptionFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to focus on the first visible or selected element when the overlay panel is shown.\nDefault value is true."
                        },
                        {
                            "name": "checkboxIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the checkboxes.\nDefault value is 'pi pi-check'."
                        },
                        {
                            "name": "closeButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the clear button inside the overlay panel."
                        },
                        {
                            "name": "closeIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the dropdown close button.\nDefault value is 'pi pi-times'."
                        },
                        {
                            "name": "dataKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "A property to uniquely identify an option."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "display",
                            "optional": true,
                            "readonly": false,
                            "type": "MultiSelectDisplayType",
                            "default": "",
                            "description": "Defines how the selected items are displayed."
                        },
                        {
                            "name": "dropdownIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the dropdown.\nDefault value is 'pi pi-chevron-down'."
                        },
                        {
                            "name": "emptyFilterMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to display when filtering does not return any results. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No results found'."
                        },
                        {
                            "name": "emptyMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to display when there are no options available. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No results found'."
                        },
                        {
                            "name": "emptySelectionMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when any option is not selected. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No selected item'."
                        },
                        {
                            "name": "filter",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified, displays a filter input at header."
                        },
                        {
                            "name": "filterFields",
                            "optional": true,
                            "readonly": false,
                            "type": "string[]",
                            "default": "",
                            "description": "Fields used when filtering the options, defaults to optionLabel."
                        },
                        {
                            "name": "filterIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in filter input.\nDefault value is 'pi pi-search'."
                        },
                        {
                            "name": "filterInputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the filter input inside the overlay panel."
                        },
                        {
                            "name": "filterLocale",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Locale to use in filtering. The default locale is the host environment's current locale."
                        },
                        {
                            "name": "filterMatchMode",
                            "optional": true,
                            "readonly": false,
                            "type": "MultiSelectFilterMatchModeType",
                            "default": "",
                            "description": "Defines the filtering algorithm to use when searching the options."
                        },
                        {
                            "name": "filterMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when filtering returns any results. Defaults to value from PrimeVue locale configuration.\nDefault value is '{0} results are available'."
                        },
                        {
                            "name": "filterPlaceholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Placeholder text to show when filter input is empty."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "loading",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the multiselect is in loading state."
                        },
                        {
                            "name": "loadingIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in loading state.\nDefault value is 'pi pi-spinner pi-spin'."
                        },
                        {
                            "name": "maxSelectedLabels",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Decides how many selected item labels to show at most."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "optionDisabled",
                            "optional": true,
                            "readonly": false,
                            "type": "MultiSelectOptionDisabledType",
                            "default": "",
                            "description": "Property name or getter function to use as the disabled flag of an option, defaults to false when not defined."
                        },
                        {
                            "name": "optionGroupChildren",
                            "optional": true,
                            "readonly": false,
                            "type": "MultiSelectOptionChildrenType",
                            "default": "",
                            "description": "Property name or getter function that refers to the children options of option group."
                        },
                        {
                            "name": "optionGroupLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "MultiSelectOptionLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an option group."
                        },
                        {
                            "name": "optionLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "MultiSelectOptionLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an option."
                        },
                        {
                            "name": "optionValue",
                            "optional": true,
                            "readonly": false,
                            "type": "MultiSelectOptionValueType",
                            "default": "",
                            "description": "Property name or getter function to use as the value of an option, defaults to the option itself when not defined."
                        },
                        {
                            "name": "options",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "An array of selectitems to display as the available options."
                        },
                        {
                            "name": "panelClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the overlay panel."
                        },
                        {
                            "name": "panelProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to the overlay panel."
                        },
                        {
                            "name": "panelStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the overlay panel."
                        },
                        {
                            "name": "placeholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Label to display when there are no selections."
                        },
                        {
                            "name": "removeTokenIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in chip remove action.\nDefault value is 'pi pi-times-circle'."
                        },
                        {
                            "name": "resetFilterOnHide",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Clears the filter value when hiding the dropdown."
                        },
                        {
                            "name": "scrollHeight",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Height of the viewport, a scrollbar is defined if height of list exceeds this value.\nDefault value is '200px'."
                        },
                        {
                            "name": "selectAll",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether all data is selected."
                        },
                        {
                            "name": "selectedItemsLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Label to display after exceeding max selected labels.\nDefault value is '{0} items selected'."
                        },
                        {
                            "name": "selectionLimit",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Maximum number of selectable items."
                        },
                        {
                            "name": "selectionMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to be displayed in hidden accessible field when options are selected. Defaults to value from PrimeVue locale configuration.\nDefault value is '{0} items selected'."
                        },
                        {
                            "name": "showToggleAll",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show the header checkbox to toggle the selection of all items at once.\nDefault value is true."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        },
                        {
                            "name": "virtualScrollerOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "VirtualScrollerProps",
                            "default": "",
                            "description": "Whether to use the virtualScroller feature. The properties of VirtualScroller component can be used like an object in it."
                        }
                    ],
                    "methods": []
                },
                "MultiSelectSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "chip",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "content",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "empty",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "emptyfilter",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "indicator",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "loader",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "option",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "optiongroup",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "MultiSelectEmits": {
                    "values": "{\n    \"before-hide\": \"Function, \",\n    \"before-show\": \"Function, \",\n    \"blur\": \"Function, \",\n    \"change\": \"Function, \",\n    \"filter\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"hide\": \"Function, \",\n    \"selectall-change\": \"Function, \",\n    \"show\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "orderlist/OrderList": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "OrderListProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive list element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying list element."
                        },
                        {
                            "name": "breakpoint",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "The breakpoint to define the maximum width boundary when responsiveness is enabled.\nDefault value is '960px'."
                        },
                        {
                            "name": "dataKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Name of the field that uniquely identifies the a record in the data."
                        },
                        {
                            "name": "listProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLAttributes to the list element."
                        },
                        {
                            "name": "listStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the the list element."
                        },
                        {
                            "name": "metaKeySelection",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines whether metaKey is requred or not for the selection.\nWhen true metaKey needs to be pressed to select or unselect an item and\nwhen set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.\nDefault value is true."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "moveBottomButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move bottom button inside the component."
                        },
                        {
                            "name": "moveDownButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move down button inside the component."
                        },
                        {
                            "name": "moveTopButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move top button inside the component."
                        },
                        {
                            "name": "moveUpButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move up button inside the component."
                        },
                        {
                            "name": "responsive",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the list optimizes layout based on screen size.\nDefault value is true."
                        },
                        {
                            "name": "selection",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Selected items in the list."
                        },
                        {
                            "name": "stripedRows",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to displays rows with alternating colors."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "OrderListReorderEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "direction",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Direction of the change; 'up', 'down', 'bottom', 'top'"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Ordered list"
                        }
                    ],
                    "methods": []
                },
                "OrderListSelectionChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Ordered list"
                        }
                    ],
                    "methods": []
                },
                "OrderListSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "controlsend",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "controlsstart",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "OrderListEmits": {
                    "values": "{\n    \"reorder\": \"Function, \",\n    \"selection-change\": \"Function, \",\n    \"update:modelValue\": \"Function, \",\n    \"update:selection\": \"Function, \"\n}"
                }
            }
        }
    },
    "organizationchart/OrganizationChart": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "OrganizationChartCollapsedKeys": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "OrganizationChartNode": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "children",
                            "optional": true,
                            "readonly": false,
                            "type": "OrganizationChartNode[]",
                            "default": "",
                            "description": "Children nodes array."
                        },
                        {
                            "name": "collapsible",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether node is collapsible when node expansion is enabled.\nDefault value is true."
                        },
                        {
                            "name": "data",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Data represented by the node."
                        },
                        {
                            "name": "key",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Unique identifier of the node. (required)"
                        },
                        {
                            "name": "selectable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether node is selectable when selection is enabled.\nDefault value is true."
                        },
                        {
                            "name": "styleClass",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the node content."
                        },
                        {
                            "name": "type",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Type of the node to match a template."
                        },
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "OrganizationChartProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "collapsedKeys",
                            "optional": true,
                            "readonly": false,
                            "type": "OrganizationChartCollapsedKeys",
                            "default": "",
                            "description": "A map instance of key-value pairs to represented the collapsed nodes."
                        },
                        {
                            "name": "collapsible",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the nodes can be expanded or toggled."
                        },
                        {
                            "name": "selectionKeys",
                            "optional": true,
                            "readonly": false,
                            "type": "OrganizationChartSelectionKeys",
                            "default": "",
                            "description": "A map instance of key-value pairs to represented the selected nodes."
                        },
                        {
                            "name": "selectionMode",
                            "optional": true,
                            "readonly": false,
                            "type": "OrganizationChartSelectionModeType",
                            "default": "",
                            "description": "Type of the selection."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "OrganizationChartNode",
                            "default": "",
                            "description": "Value of the component."
                        }
                    ],
                    "methods": []
                },
                "OrganizationChartSelectionKeys": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "OrganizationChartSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "Function"
                        }
                    ],
                    "methods": []
                }
            }
        }
    },
    "overlaypanel/OverlayPanel": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "OverlayPanelBreakpoints": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "string"
                        }
                    ],
                    "methods": []
                },
                "OverlayPanelProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "OverlayPanelAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached."
                        },
                        {
                            "name": "autoZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to automatically manage layering.\nDefault value is true."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "breakpoints",
                            "optional": true,
                            "readonly": false,
                            "type": "OverlayPanelBreakpoints",
                            "default": "",
                            "description": "Object literal to define widths per screen size."
                        },
                        {
                            "name": "dismissable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Enables to hide the overlay when outside is clicked.\nDefault value is true."
                        },
                        {
                            "name": "showCloseIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, displays a close icon at top right corner."
                        }
                    ],
                    "methods": []
                },
                "OverlayPanelSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "OverlayPanelEmits": {
                    "values": "{\n    \"hide\": \"Function, \",\n    \"show\": \"Function, \"\n}"
                }
            }
        }
    },
    "paginator/Paginator": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "PageState": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of first record"
                        },
                        {
                            "name": "page",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "New page number"
                        },
                        {
                            "name": "pageCount",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Total number of pages"
                        },
                        {
                            "name": "rows",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display in new page"
                        }
                    ],
                    "methods": []
                },
                "PaginatorProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "alwaysShow",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show the paginator even there is only one page.\nDefault value is true."
                        },
                        {
                            "name": "currentPageReportTemplate",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Template of the current page report element. It displays information about the pagination state. Default value is ({currentPage} of {totalPages}) whereas available placeholders are the following;\n\n- {currentPage}\n- {totalPages}\n- {rows}\n- {first}\n- {last}\n- {totalRecords}"
                        },
                        {
                            "name": "first",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Zero-relative number of the first row to be displayed.\nDefault value is 0."
                        },
                        {
                            "name": "pageLinkSize",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of page links to display.\nDefault value is 5."
                        },
                        {
                            "name": "rows",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Data count to display per page.\nDefault value is 0."
                        },
                        {
                            "name": "rowsPerPageOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "number[]",
                            "default": "",
                            "description": "Array of integer values to display inside rows per page dropdown."
                        },
                        {
                            "name": "template",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Template of the paginator, can either be a string or an object with key-value pairs to define templates per breakpoint.\n\n- FirstPageLink\n- PrevPageLink\n- PageLinks\n- NextPageLink\n- LastPageLink\n- RowsPerPageDropdown\n- JumpToPageDropdown\n- JumpToPageInput\n- CurrentPageReport"
                        },
                        {
                            "name": "totalRecords",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of total records.\nDefault value is 0."
                        }
                    ],
                    "methods": []
                },
                "PaginatorSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "end",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "start",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "PaginatorEmits": {
                    "values": "{\n    \"page\": \"Function, \",\n    \"update:first\": \"Function, \",\n    \"update:rows\": \"Function, \"\n}"
                }
            }
        }
    },
    "panel/Panel": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "PanelProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "collapsed",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines the initial state of panel content."
                        },
                        {
                            "name": "header",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Header text of the panel."
                        },
                        {
                            "name": "toggleButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass the custom value to read for the button inside the component."
                        },
                        {
                            "name": "toggleable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if content of panel can be expanded and collapsed."
                        }
                    ],
                    "methods": []
                },
                "PanelSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "icons",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "PanelToggleEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Collapsed state as a boolean"
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "PanelEmits": {
                    "values": "{\n    \"toggle\": \"Function, \",\n    \"update:collapsed\": \"Function, \"\n}"
                }
            }
        }
    },
    "panelmenu/PanelMenu": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "PanelMenuExpandedKeys": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "PanelMenuPanelCloseEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Current item."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "MouseEvent",
                            "default": "",
                            "description": "Browser mouse event."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "PanelMenuPanelOpenEvent"
                },
                "PanelMenuPanelOpenEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Current item."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "MouseEvent",
                            "default": "",
                            "description": "Browser mouse event."
                        }
                    ],
                    "methods": [],
                    "extendedBy": "PanelMenuPanelCloseEvent"
                },
                "PanelMenuProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "exact",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to apply 'router-link-active-exact' class if route exactly matches the item path."
                        },
                        {
                            "name": "expandedKeys",
                            "optional": true,
                            "readonly": false,
                            "type": "PanelMenuExpandedKeys",
                            "default": "",
                            "description": "A map of keys to represent the expansion state in controlled mode."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "An array of menuitems."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "PanelMenuSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "PanelMenuEmits": {
                    "values": "{\n    \"panel-close\": \"Function, \",\n    \"panel-open\": \"Function, \",\n    \"update:expandedKeys\": \"Function, \"\n}"
                }
            }
        }
    },
    "password/Password": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "PasswordProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "PasswordAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are 'body' for document body and 'self' for the element itself."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "feedback",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show the strength indicator or not.\nDefault value is true."
                        },
                        {
                            "name": "hideIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to hide displaying the password as plain text.\nDefault value is 'pi pi-eye-slash'."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "mediumLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text for a medium password. Defaults to PrimeVue Locale configuration."
                        },
                        {
                            "name": "mediumRegex",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Regex for a medium level password.\nDefault value is '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})'."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "Nullable<string>",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "panelClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the overlay panel."
                        },
                        {
                            "name": "panelId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying overlay panel element."
                        },
                        {
                            "name": "panelProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to the overlay panel inside the component."
                        },
                        {
                            "name": "panelStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the overlay panel."
                        },
                        {
                            "name": "placeholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Placeholder text for the input."
                        },
                        {
                            "name": "promptLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to prompt password entry. Defaults to PrimeVue Locale configuration."
                        },
                        {
                            "name": "required",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that an input field must be filled out before submitting the form.\nDefault value is false."
                        },
                        {
                            "name": "showIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to show displaying the password as plain text.\nDefault value is 'pi pi-eye'."
                        },
                        {
                            "name": "strongLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text for a strong password. Defaults to PrimeVue Locale configuration."
                        },
                        {
                            "name": "strongRegex",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Regex for a strong level password.\nDefault value is '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})'."
                        },
                        {
                            "name": "toggleMask",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show an icon to display the password as plain text."
                        },
                        {
                            "name": "weakLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text for a weak password. Defaults to PrimeVue Locale configuration."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "InputHTMLAttributes"
                },
                "PasswordSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "content",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "PasswordEmits": {
                    "values": "{\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "picklist/PickList": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "PickListMoveAllToSourceEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "items",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Moved items"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "PickListMoveToTargetEvent"
                },
                "PickListMoveAllToTargetEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "items",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Moved items"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "PickListMoveToTargetEvent"
                },
                "PickListMoveToSourceEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "items",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Moved items"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "PickListMoveToTargetEvent"
                },
                "PickListMoveToTargetEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "items",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Moved items"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedBy": "PickListMoveAllToTargetEvent,PickListMoveToSourceEvent,PickListMoveAllToSourceEvent"
                },
                "PickListProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "breakpoint",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "The breakpoint to define the maximum width boundary when responsiveness is enabled.\nDefault value is '960px'."
                        },
                        {
                            "name": "dataKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Name of the field that uniquely identifies the a record in the data."
                        },
                        {
                            "name": "listStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the the list element."
                        },
                        {
                            "name": "metaKeySelection",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines whether metaKey is requred or not for the selection.\nWhen true metaKey needs to be pressed to select or unselect an item and\nwhen set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.\nDefault value is true."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any[][]",
                            "default": "",
                            "description": "Value of the component as a multidimensional array."
                        },
                        {
                            "name": "moveAllToSourceProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move all to source button inside the component."
                        },
                        {
                            "name": "moveAllToTargetProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move all to target button inside the component."
                        },
                        {
                            "name": "moveBottomButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move bottom button inside the component."
                        },
                        {
                            "name": "moveDownButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move down button inside the component."
                        },
                        {
                            "name": "moveToSourceProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move to source button inside the component."
                        },
                        {
                            "name": "moveToTargetProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move to target button inside the component."
                        },
                        {
                            "name": "moveTopButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move top button inside the component."
                        },
                        {
                            "name": "moveUpButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the move up button inside the component."
                        },
                        {
                            "name": "responsive",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the list optimizes layout based on screen size.\nDefault value is true."
                        },
                        {
                            "name": "selection",
                            "optional": true,
                            "readonly": false,
                            "type": "any[][]",
                            "default": "",
                            "description": "Selected items in the list as a multidimensional array."
                        },
                        {
                            "name": "showSourceControls",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show buttons of source list."
                        },
                        {
                            "name": "showTargetControls",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show buttons of target list."
                        },
                        {
                            "name": "sourceListProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLAttributes to the source list element."
                        },
                        {
                            "name": "stripedRows",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to displays rows with alternating colors."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the list element in tabbing order."
                        },
                        {
                            "name": "targetListProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLAttributes to the target list element."
                        }
                    ],
                    "methods": []
                },
                "PickListReorderEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "direction",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Direction of the change; 'up', 'down', 'bottom', 'top'"
                        },
                        {
                            "name": "listIndex",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the list that is ordered, 0 represents the source and 1 represents the target list."
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Ordered list"
                        }
                    ],
                    "methods": []
                },
                "PickListSelectionChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "Selected item"
                        }
                    ],
                    "methods": []
                },
                "PickListSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "movecontrolsend",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "movecontrolsstart",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "sourcecontrolsend",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "sourcecontrolsstart",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "sourceheader",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "targetcontrolsend",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "targetcontrolsstart",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "targetheader",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "PickListEmits": {
                    "values": "{\n    \"move-all-to-source\": \"Function, \",\n    \"move-all-to-target\": \"Function, \",\n    \"move-to-source\": \"Function, \",\n    \"move-to-target\": \"Function, \",\n    \"reorder\": \"Function, \",\n    \"selection-change\": \"Function, \",\n    \"update:modelValue\": \"Function, \",\n    \"update:selection\": \"Function, \"\n}"
                }
            }
        }
    },
    "portal/Portal": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "PortalProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "PortalAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the dialog gets attached. Special keywords are 'body' for document body and 'self' for the element itself."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "If disabled, the Portal feature is eliminated and the content is displayed directly."
                        }
                    ],
                    "methods": []
                },
                "PortalSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "PortalEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "progressbar/ProgressBar": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ProgressBarProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "mode",
                            "optional": true,
                            "readonly": false,
                            "type": "ProgressBarModeType",
                            "default": "",
                            "description": "Defines the mode of the progress"
                        },
                        {
                            "name": "showValue",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display the progress bar value.\nDefault value is true."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Current value of the progress."
                        }
                    ],
                    "methods": []
                },
                "ProgressBarSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ProgressBarEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "progressspinner/ProgressSpinner": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ProgressSpinnerProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "animationDuration",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Duration of the rotate animation.\nDefault value is 2s."
                        },
                        {
                            "name": "fill",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Color for the background of the circle."
                        },
                        {
                            "name": "strokeWidth",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Width of the circle stroke.\nDefault value is 2."
                        }
                    ],
                    "methods": []
                },
                "ProgressSpinnerSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ProgressSpinnerEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "radiobutton/RadioButton": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "RadioButtonProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value binding of the checkbox."
                        },
                        {
                            "name": "name",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Name of the input element."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value of the checkbox."
                        }
                    ],
                    "methods": []
                },
                "RadioButtonSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "RadioButtonEmits": {
                    "values": "{\n    \"change\": \"Function, \",\n    \"click\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "rating/Rating": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "RatingChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Selected option value"
                        }
                    ],
                    "methods": []
                },
                "RatingProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "cancel",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified a cancel icon is displayed to allow clearing the value.\nDefault value is true."
                        },
                        {
                            "name": "cancelIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon for the cancelable state.\nDefault value is pi pi-ban."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the element should be disabled."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Value of the rating."
                        },
                        {
                            "name": "name",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Name of the element."
                        },
                        {
                            "name": "offIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon for the off state.\nDefault value is pi pi-star-fill."
                        },
                        {
                            "name": "onIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon for the on state.\nDefault value is pi pi-star."
                        },
                        {
                            "name": "readonly",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that component is read-only."
                        },
                        {
                            "name": "stars",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of stars.\nDefault value is 5."
                        }
                    ],
                    "methods": []
                },
                "RatingSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "cancelicon",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "officon",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "onicon",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "RatingEmits": {
                    "values": "{\n    \"blur\": \"Function, \",\n    \"change\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "ripple/Ripple": {},
    "row": {
        "description": "",
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "RowEmits": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                },
                "RowProps": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                },
                "RowSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        }
    },
    "scrollpanel/ScrollPanel": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ScrollPanelProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "step",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Step factor to scroll the content while pressing the arrow keys.\nDefault value is 5."
                        }
                    ],
                    "methods": []
                },
                "ScrollPanelSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ScrollPanelEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "scrolltop/ScrollTop": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ScrollTopProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "behavior",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines the scrolling behaviour, 'smooth' adds an animation and 'auto' scrolls with a jump.\nDefault value is 'smooth'."
                        },
                        {
                            "name": "icon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display.\nDefault value is 'pi pi-chevron-up'."
                        },
                        {
                            "name": "target",
                            "optional": true,
                            "readonly": false,
                            "type": "ScrollTopTargetType",
                            "default": "",
                            "description": "Target of the ScrollTop."
                        },
                        {
                            "name": "threshold",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Defines the threshold value of the vertical scroll position of the target to toggle the visibility.\nDefault value is 400."
                        }
                    ],
                    "methods": []
                },
                "ScrollTopSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ScrollTopEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "selectbutton/SelectButton": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "SelectButtonChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Single value or an array of values that are selected."
                        }
                    ],
                    "methods": []
                },
                "SelectButtonProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying element."
                        },
                        {
                            "name": "dataKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "A property to uniquely identify an option."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the element should be disabled."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "multiple",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified, allows selecting multiple values."
                        },
                        {
                            "name": "optionDisabled",
                            "optional": true,
                            "readonly": false,
                            "type": "SelectButtonOptionDisabledType",
                            "default": "",
                            "description": "Property name or getter function to use as the disabled flag of an option, defaults to false when not defined."
                        },
                        {
                            "name": "optionLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "SelectButtonOptionLabelType",
                            "default": "",
                            "description": "Property name or getter function to use as the label of an option."
                        },
                        {
                            "name": "optionValue",
                            "optional": true,
                            "readonly": false,
                            "type": "SelectButtonOptionValueType",
                            "default": "",
                            "description": "Property name or getter function to use as the value of an option, defaults to the option itself when not defined."
                        },
                        {
                            "name": "options",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "An array of selectitems to display as the available options."
                        },
                        {
                            "name": "unselectable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether selection can be cleared."
                        }
                    ],
                    "methods": []
                },
                "SelectButtonSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "option",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "SelectButtonEmits": {
                    "values": "{\n    \"blur\": \"Function, \",\n    \"change\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "sidebar/Sidebar": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "SidebarProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "autoZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to automatically manage layering.\nDefault value is true."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "blockScroll",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether background scroll should be blocked when sidebar is visible."
                        },
                        {
                            "name": "closeIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the sidebar close button.\nDefault value is 'pi pi-times'."
                        },
                        {
                            "name": "dismissable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether clicking outside closes the panel.\nDefault value is true."
                        },
                        {
                            "name": "modal",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to a modal layer behind the sidebar.\nDefault value is true."
                        },
                        {
                            "name": "position",
                            "optional": true,
                            "readonly": false,
                            "type": "SidebarPositionType",
                            "default": "",
                            "description": "Specifies the position of the sidebar."
                        },
                        {
                            "name": "showCloseIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display a close icon inside the panel.\nDefault value is true."
                        },
                        {
                            "name": "visible",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Specifies the visibility of the dialog."
                        }
                    ],
                    "methods": []
                },
                "SidebarSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "SidebarEmits": {
                    "values": "{\n    \"hide\": \"Function, \",\n    \"show\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "skeleton/Skeleton": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "SkeletonProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "animation",
                            "optional": true,
                            "readonly": false,
                            "type": "SkeletonAnimationType",
                            "default": "",
                            "description": "Type of the animation."
                        },
                        {
                            "name": "borderRadius",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Border radius of the element, defaults to value from theme."
                        },
                        {
                            "name": "height",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Height of the element.\nDefault value is '1rem'."
                        },
                        {
                            "name": "shape",
                            "optional": true,
                            "readonly": false,
                            "type": "SkeletonShapeType",
                            "default": "",
                            "description": "Shape of the element."
                        },
                        {
                            "name": "size",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Size of the Circle or Square."
                        },
                        {
                            "name": "width",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Width of the element.\nDefault value is '100%'."
                        }
                    ],
                    "methods": []
                },
                "SkeletonSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "SkeletonEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "slider/Slider": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "SliderProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Used to define a string that labels the element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "max",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Maximum boundary value.\nDefault value is 100."
                        },
                        {
                            "name": "min",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Mininum boundary value.\nDefault value is 0."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "number | number[]",
                            "default": "",
                            "description": "Value of the component.\nDefault value is 0."
                        },
                        {
                            "name": "orientation",
                            "optional": true,
                            "readonly": false,
                            "type": "SliderOrientationType",
                            "default": "",
                            "description": "Orientation of the slider."
                        },
                        {
                            "name": "range",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When speficed, allows two boundary values to be picked."
                        },
                        {
                            "name": "step",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Step factor to increment/decrement the value.\nDefault value is 1."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "SliderSlideEndEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Original event"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "New value."
                        }
                    ],
                    "methods": []
                },
                "SliderSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "SliderEmits": {
                    "values": "{\n    \"change\": \"Function, \",\n    \"slideend\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "speeddial/SpeedDial": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "SpeedDialProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive list element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying list element."
                        },
                        {
                            "name": "buttonClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the button element."
                        },
                        {
                            "name": "class",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the element."
                        },
                        {
                            "name": "direction",
                            "optional": true,
                            "readonly": false,
                            "type": "SpeedDialDirectionType",
                            "default": "",
                            "description": "Specifies the opening direction of actions."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the component is disabled."
                        },
                        {
                            "name": "hideIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Hide icon of the button element."
                        },
                        {
                            "name": "hideOnClickOutside",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the actions close when clicked outside.\nDefault value is true."
                        },
                        {
                            "name": "mask",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show a mask element behind the speeddial."
                        },
                        {
                            "name": "maskClass",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the mask element."
                        },
                        {
                            "name": "maskStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the mask element."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "MenuModel instance to define the action items."
                        },
                        {
                            "name": "radius",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Radius for *circle types.\nDefault value is 0."
                        },
                        {
                            "name": "rotateAnimation",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defined to rotate showIcon when hideIcon is not present.\nDefault value is true."
                        },
                        {
                            "name": "showIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Show icon of the button element.\nDefault value is 'pi pi-plus'."
                        },
                        {
                            "name": "style",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the element."
                        },
                        {
                            "name": "tooltipOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "SpeedDialTooltipOptions",
                            "default": "",
                            "description": "Whether to display the tooltip on items. The modifiers of Tooltip can be used like an object in it. Valid keys are 'event' and 'position'."
                        },
                        {
                            "name": "transitionDelay",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Transition delay step for each action item.\nDefault value is 30."
                        },
                        {
                            "name": "type",
                            "optional": true,
                            "readonly": false,
                            "type": "SpeedDialType",
                            "default": "",
                            "description": "Specifies the opening type of actions."
                        },
                        {
                            "name": "visible",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Specifies the visibility of the overlay."
                        }
                    ],
                    "methods": []
                },
                "SpeedDialSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "button",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "SpeedDialTooltipOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "event",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Event to show the tooltip, valid values are hover and focus."
                        },
                        {
                            "name": "position",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Position of element."
                        },
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "string"
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "SpeedDialEmits": {
                    "values": "{\n    \"blur\": \"Function, \",\n    \"click\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"hide\": \"Function, \",\n    \"show\": \"Function, \"\n}"
                }
            }
        }
    },
    "splitbutton/SplitButton": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "SplitButtonProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "SplitButtonAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached."
                        },
                        {
                            "name": "autoZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to automatically manage layering.\nDefault value is true."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "buttonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the default button."
                        },
                        {
                            "name": "class",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the component."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the element should be disabled."
                        },
                        {
                            "name": "icon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Name of the icon."
                        },
                        {
                            "name": "label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text of the button."
                        },
                        {
                            "name": "menuButtonIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Name of the menu button icon."
                        },
                        {
                            "name": "menuButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the menu button."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "MenuModel instance to define the overlay items."
                        },
                        {
                            "name": "style",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the component."
                        }
                    ],
                    "methods": []
                },
                "SplitButtonSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "SplitButtonEmits": {
                    "values": "{\n    \"click\": \"Function, \"\n}"
                }
            }
        }
    },
    "splitter/Splitter": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "SplitterProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "gutterSize",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Size of the divider in pixels.\nDefault value is 4."
                        },
                        {
                            "name": "layout",
                            "optional": true,
                            "readonly": false,
                            "type": "SplitterLayoutType",
                            "default": "",
                            "description": "Orientation of the panels."
                        },
                        {
                            "name": "stateKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Storage identifier of a stateful Splitter."
                        },
                        {
                            "name": "stateStorage",
                            "optional": true,
                            "readonly": false,
                            "type": "SplitterStateStorageType",
                            "default": "",
                            "description": "Defines where a stateful splitter keeps its state, valid values are 'session' for sessionStorage and 'local' for localStorage."
                        },
                        {
                            "name": "step",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Step factor to increment/decrement the size of the panels while pressing the arrow keys.\nDefault value is 1."
                        }
                    ],
                    "methods": []
                },
                "SplitterResizeEndEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "sizes",
                            "optional": false,
                            "readonly": false,
                            "type": "number[]",
                            "default": "",
                            "description": "Sizes of the panels"
                        }
                    ],
                    "methods": []
                },
                "SplitterResizeStartEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        },
                        {
                            "name": "sizes",
                            "optional": false,
                            "readonly": false,
                            "type": "number[]",
                            "default": "",
                            "description": "Sizes of the panels"
                        }
                    ],
                    "methods": []
                },
                "SplitterSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "SplitterEmits": {
                    "values": "{\n    \"resizeend\": \"Function, \",\n    \"resizestar\": \"Function, \"\n}"
                }
            }
        }
    },
    "splitterpanel/SplitterPanel": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "SplitterPanelProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "minSize",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Minimum size of the element relative to 100%."
                        },
                        {
                            "name": "size",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Size of the element relative to 100%."
                        }
                    ],
                    "methods": []
                },
                "SplitterPanelSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "SplitterPanelEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "steps/Steps": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "StepsProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "exact",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to apply 'router-link-active-exact' class if route exactly matches the item path.\nDefault value is true."
                        },
                        {
                            "name": "id",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Unique identifier of the element."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "An array of menuitems."
                        },
                        {
                            "name": "readonly",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the items are clickable or not.\nDefault value is true."
                        }
                    ],
                    "methods": []
                },
                "StepsSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "StepsEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "styleclass/StyleClass": {},
    "tabmenu/TabMenu": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TabMenuChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the selected tab"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": []
                },
                "TabMenuProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "activeIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Active index of menuitem.\nDefault value is 0."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "exact",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if active route highlight should match the exact route path.\nDefault value is true."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "An array of menuitems."
                        }
                    ],
                    "methods": []
                },
                "TabMenuSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TabMenuEmits": {
                    "values": "{\n    \"tab-change\": \"Function, \"\n}"
                }
            }
        }
    },
    "tabpanel/TabPanel": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TabPanelProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "contentClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the tab content."
                        },
                        {
                            "name": "contentProps",
                            "optional": true,
                            "readonly": false,
                            "type": "HTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLDivElement to the tab content."
                        },
                        {
                            "name": "contentStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the tab content."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the tab is disabled."
                        },
                        {
                            "name": "header",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Orientation of tab headers."
                        },
                        {
                            "name": "headerActionProps",
                            "optional": true,
                            "readonly": false,
                            "type": "AnchorHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLAnchorElement to the focusable anchor element inside the tab header."
                        },
                        {
                            "name": "headerClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the tab header."
                        },
                        {
                            "name": "headerProps",
                            "optional": true,
                            "readonly": false,
                            "type": "LiHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLLiElement to the tab header."
                        },
                        {
                            "name": "headerStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the tab header."
                        }
                    ],
                    "methods": []
                },
                "TabPanelSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TabPanelEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "tabview/TabView": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TabViewChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the selected tab"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedBy": "TabViewClickEvent"
                },
                "TabViewClickEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the selected tab"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "TabViewChangeEvent"
                },
                "TabViewProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "activeIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the active tab."
                        },
                        {
                            "name": "lazy",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, hidden tabs are not rendered at all. Defaults to false that hides tabs with css."
                        },
                        {
                            "name": "nextButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the next button."
                        },
                        {
                            "name": "previousButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the previous button."
                        },
                        {
                            "name": "scrollable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled displays buttons at each side of the tab headers to scroll the tab list."
                        },
                        {
                            "name": "selectOnFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, the focused tab is activated."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "TabViewSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TabViewEmits": {
                    "values": "{\n    \"tab-change\": \"Function, \",\n    \"tab-click\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "tag/Tag": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TagProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "icon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the tag to display next to the value."
                        },
                        {
                            "name": "rounded",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the corners of the tag are rounded."
                        },
                        {
                            "name": "severity",
                            "optional": true,
                            "readonly": false,
                            "type": "TagSeverityType",
                            "default": "",
                            "description": "Severity type of the tag."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value to display inside the tag."
                        }
                    ],
                    "methods": []
                },
                "TagSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "default",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TagEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "terminal/Terminal": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TerminalProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "prompt",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Prompt text for each command."
                        },
                        {
                            "name": "welcomeMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Initial text to display on terminal."
                        }
                    ],
                    "methods": []
                },
                "TerminalSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TerminalEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "terminalservice/TerminalService": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TerminalServiceOptions": {
                    "relatedProp": "",
                    "props": [],
                    "methods": [
                        {
                            "name": "emit",
                            "parameters": [
                                {
                                    "name": "action",
                                    "optional": false,
                                    "type": "TerminalServiceActionType"
                                },
                                {
                                    "name": "params",
                                    "optional": true,
                                    "type": "any"
                                }
                            ],
                            "returnType": "void"
                        },
                        {
                            "name": "off",
                            "parameters": [
                                {
                                    "name": "action",
                                    "optional": false,
                                    "type": "TerminalServiceActionType"
                                },
                                {
                                    "name": "fn",
                                    "optional": false,
                                    "type": "any"
                                }
                            ],
                            "returnType": "void"
                        },
                        {
                            "name": "on",
                            "parameters": [
                                {
                                    "name": "action",
                                    "optional": false,
                                    "type": "TerminalServiceActionType"
                                },
                                {
                                    "name": "fn",
                                    "optional": false,
                                    "type": "any"
                                }
                            ],
                            "returnType": "void"
                        }
                    ]
                }
            }
        }
    },
    "textarea/Textarea": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TextareaProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "autoResize",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, height of textarea changes as being typed."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Value of the component."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "TextareaHTMLAttributes"
                },
                "TextareaSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TextareaEmits": {
                    "values": "{\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "tieredmenu/TieredMenu": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TieredMenuProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "TieredMenuAppandToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying menu element."
                        },
                        {
                            "name": "autoZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to automatically manage layering.\nDefault value is true."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "exact",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to apply 'router-link-active-exact' class if route exactly matches the item path.\nDefault value is true."
                        },
                        {
                            "name": "model",
                            "optional": true,
                            "readonly": false,
                            "type": "MenuItem[]",
                            "default": "",
                            "description": "An array of menuitems."
                        },
                        {
                            "name": "popup",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if menu would displayed as a popup."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "TieredMenuSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TieredMenuEmits": {
                    "values": "{\n    \"before-hide\": \"Function, \",\n    \"before-show\": \"Function, \",\n    \"blur\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"hide\": \"Function, \",\n    \"show\": \"Function, \"\n}"
                }
            }
        }
    },
    "timeline/Timeline": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TimelineProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "align",
                            "optional": true,
                            "readonly": false,
                            "type": "TimelineAlignType",
                            "default": "",
                            "description": "Position of the timeline bar relative to the content."
                        },
                        {
                            "name": "dataKey",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Name of the field that uniquely identifies the a record in the data."
                        },
                        {
                            "name": "layout",
                            "optional": true,
                            "readonly": false,
                            "type": "TimelineLayoutType",
                            "default": "",
                            "description": "Orientation of the timeline."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "any[]",
                            "default": "",
                            "description": "An array of events to display."
                        }
                    ],
                    "methods": []
                },
                "TimelineSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "connector",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "content",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "marker",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "opposite",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TimelineEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "toast/Toast": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ToastBreakpointsType": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "ToastMessageOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "closable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the message can be closed manually using the close icon.\nDefault value is true."
                        },
                        {
                            "name": "contentStyleClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the content."
                        },
                        {
                            "name": "detail",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Detail content of the message."
                        },
                        {
                            "name": "group",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Key of the Toast to display the message."
                        },
                        {
                            "name": "life",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Delay in milliseconds to close the message automatically.\nDefault value is 3000."
                        },
                        {
                            "name": "severity",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Severity level of the message."
                        },
                        {
                            "name": "styleClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the message."
                        },
                        {
                            "name": "summary",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Summary content of the message."
                        }
                    ],
                    "methods": []
                },
                "ToastProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "autoZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to automatically manage layering.\nDefault value is true."
                        },
                        {
                            "name": "baseZIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Base zIndex value to use in layering.\nDefault value is 0."
                        },
                        {
                            "name": "breakpoints",
                            "optional": true,
                            "readonly": false,
                            "type": "ToastBreakpointsType",
                            "default": "",
                            "description": "Object literal to define styles per screen size."
                        },
                        {
                            "name": "closeButtonProps",
                            "optional": true,
                            "readonly": false,
                            "type": "ButtonHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLButtonElement to the close button."
                        },
                        {
                            "name": "closeIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the toast close button.\nDefault value is 'pi pi-times'."
                        },
                        {
                            "name": "errorIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the toast with error severity.\nDefault value is 'pi pi-times'."
                        },
                        {
                            "name": "group",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Unique identifier of a message group."
                        },
                        {
                            "name": "infoIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the toast with info severity.\nDefault value is 'pi pi-info-circle'."
                        },
                        {
                            "name": "position",
                            "optional": true,
                            "readonly": false,
                            "type": "ToastPositionType",
                            "default": "",
                            "description": "Position of the toast in viewport."
                        },
                        {
                            "name": "successIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the toast with success severity.\nDefault value is 'pi pi-check'."
                        },
                        {
                            "name": "warnIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display in the toast with warn severity.\nDefault value is 'pi pi-exclamation-triangle'."
                        }
                    ],
                    "methods": []
                },
                "ToastSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "message",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ToastEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "toastservice/ToastService": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ToastServiceMethods": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "add",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "removeAllGroups",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "removeGroup",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        }
    },
    "togglebutton/ToggleButton": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ToggleButtonProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the element should be disabled."
                        },
                        {
                            "name": "iconPos",
                            "optional": true,
                            "readonly": false,
                            "type": "ToggleButtonType",
                            "default": "",
                            "description": "Position of the icon."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the focus input to match a label defined for the chips."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "offIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon for the off state."
                        },
                        {
                            "name": "offLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Label for the off state.\nDefault value is 'no'."
                        },
                        {
                            "name": "onIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon for the on state."
                        },
                        {
                            "name": "onLabel",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Label for the on state.\nDefault value is 'yes'."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "ToggleButtonSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ToggleButtonEmits": {
                    "values": "{\n    \"blur\": \"Function, \",\n    \"change\": \"Function, \",\n    \"focus\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "toolbar/Toolbar": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "ToolbarProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        }
                    ],
                    "methods": []
                },
                "ToolbarSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "center",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "end",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "start",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "ToolbarEmits": {
                    "values": "{}"
                }
            }
        }
    },
    "tooltip/Tooltip": {},
    "tree/Tree": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TreeExpandedKeys": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "TreeNode": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "children",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeNode[]",
                            "default": "",
                            "description": "An array of treenodes as children."
                        },
                        {
                            "name": "collapsedIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to use in collapsed state."
                        },
                        {
                            "name": "data",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Data represented by the node."
                        },
                        {
                            "name": "expandedIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to use in expanded state."
                        },
                        {
                            "name": "icon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of the node to display next to content."
                        },
                        {
                            "name": "key",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Mandatory unique key of the node."
                        },
                        {
                            "name": "label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Label of the node."
                        },
                        {
                            "name": "leaf",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Specifies if the node has children. Used in lazy loading."
                        },
                        {
                            "name": "selectable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the node is selectable when selection mode is enabled."
                        },
                        {
                            "name": "style",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the node."
                        },
                        {
                            "name": "styleClass",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Style class of the node."
                        },
                        {
                            "name": "type",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Type of the node to match a template."
                        },
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "TreeProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Defines a string value that labels an interactive element."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying menu element."
                        },
                        {
                            "name": "expandedKeys",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeExpandedKeys",
                            "default": "",
                            "description": "A map of keys to represent the expansion state in controlled mode."
                        },
                        {
                            "name": "filter",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified, displays an input field to filter the items."
                        },
                        {
                            "name": "filterBy",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\nDefault valye is 'label'."
                        },
                        {
                            "name": "filterLocale",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Locale to use in filtering. The default locale is the host environment's current locale."
                        },
                        {
                            "name": "filterMode",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeFilterModeType",
                            "default": "",
                            "description": "Mode for filtering."
                        },
                        {
                            "name": "filterPlaceholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Placeholder text to show when filter input is empty."
                        },
                        {
                            "name": "loading",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to display loading indicator."
                        },
                        {
                            "name": "loadingIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon to display when tree is loading.\nDefault value is 'pi pi-spin'."
                        },
                        {
                            "name": "metaKeySelection",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually.\nOn touch enabled devices, metaKeySelection is turned off automatically.\nDefault value is true."
                        },
                        {
                            "name": "scrollHeight",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeScrollHeightType",
                            "default": "",
                            "description": "Height of the scroll viewport in fixed units or the 'flex' keyword for a dynamic size."
                        },
                        {
                            "name": "selectionKeys",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeSelectionKeys",
                            "default": "",
                            "description": "A map of keys to control the selection state."
                        },
                        {
                            "name": "selectionMode",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeSelectionModeType",
                            "default": "",
                            "description": "Defines the selection mode."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeNode[]",
                            "default": "",
                            "description": "An array of treenodes."
                        }
                    ],
                    "methods": []
                },
                "TreeSelectionKeys": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "TreeSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "Function"
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TreeEmits": {
                    "values": "{\n    \"node-collapse\": \"Function, \",\n    \"node-expand\": \"Function, \",\n    \"node-select\": \"Function, \",\n    \"node-unselect\": \"Function, \",\n    \"update:expandedKeys\": \"Function, \",\n    \"update:selectionKeys\": \"Function, \"\n}"
                }
            }
        }
    },
    "treeselect/TreeSelect": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TreeSelectProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "appendTo",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeSelectAppendToType",
                            "default": "",
                            "description": "A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are 'body' for document body and 'self' for the element itself."
                        },
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "display",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeSelectDisplayType",
                            "default": "",
                            "description": "Defines how the selected items are displayed."
                        },
                        {
                            "name": "emptyMessage",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Text to display when there are no options available. Defaults to value from PrimeVue locale configuration.\nDefault value is 'No results found'."
                        },
                        {
                            "name": "inputClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the input field."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "object",
                            "default": "",
                            "description": ""
                        },
                        {
                            "name": "inputStyle",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the input field."
                        },
                        {
                            "name": "metaKeySelection",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually.\nOn touch enabled devices, metaKeySelection is turned off automatically.\nDefault value is true."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "options",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeNode[]",
                            "default": "",
                            "description": "An array of treenodes."
                        },
                        {
                            "name": "panelClass",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the overlay panel."
                        },
                        {
                            "name": "placeholder",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Label to display when there are no selections."
                        },
                        {
                            "name": "scrollHeight",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Height of the viewport, a scrollbar is defined if height of list exceeds this value.\nDefault value is '200px'."
                        },
                        {
                            "name": "selectionMode",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeSelectSelectionModeType",
                            "default": "",
                            "description": "Defines the selection mode."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "TreeSelectSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "empty",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "indicator",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TreeSelectEmits": {
                    "values": "{\n    \"before-hide\": \"Function, \",\n    \"before-show\": \"Function, \",\n    \"change\": \"Function, \",\n    \"hide\": \"Function, \",\n    \"node-collapse\": \"Function, \",\n    \"node-expand\": \"Function, \",\n    \"node-select\": \"Function, \",\n    \"node-unselect\": \"Function, \",\n    \"show\": \"Function, \",\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "treetable/TreeTable": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TreeTableExpandedKeys": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "TreeTableFilterEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "filterMatchModes",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableFilterMatchModeType",
                            "default": "",
                            "description": "Match modes per field"
                        },
                        {
                            "name": "filteredValue",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Filtered collection (non-lazy only)"
                        },
                        {
                            "name": "filters",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableFilterMeta",
                            "default": "",
                            "description": "Collection of active filters"
                        },
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of first record"
                        },
                        {
                            "name": "multiSortMeta",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableMultiSortMetaType",
                            "default": "",
                            "description": "MultiSort metadata"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "rows",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display in new page"
                        },
                        {
                            "name": "sortField",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableSortFieldType",
                            "default": "",
                            "description": "Field to sort against"
                        },
                        {
                            "name": "sortOrder",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableSortOrderType",
                            "default": "",
                            "description": "Sort order as integer"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "TreeTableSortEvent"
                },
                "TreeTableFilterMeta": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "string | TreeTableFilterMetaData | TreeTableOperatorFilterMetaData"
                        }
                    ],
                    "methods": []
                },
                "TreeTableFilterMetaData": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "matchMode",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableFilterMatchModeType",
                            "default": "",
                            "description": "Filter match mode"
                        },
                        {
                            "name": "value",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Filter value"
                        }
                    ],
                    "methods": []
                },
                "TreeTableOperatorFilterMetaData": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "constraints",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableFilterMetaData[]",
                            "default": "",
                            "description": "Array of filter meta datas."
                        },
                        {
                            "name": "operator",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Filter operator"
                        }
                    ],
                    "methods": []
                },
                "TreeTablePageEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "filterMatchModes",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableFilterMatchModeType",
                            "default": "",
                            "description": "Match modes per field"
                        },
                        {
                            "name": "filters",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableFilterMeta",
                            "default": "",
                            "description": "Collection of active filters"
                        },
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of first record"
                        },
                        {
                            "name": "multiSortMeta",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableMultiSortMetaType",
                            "default": "",
                            "description": "MultiSort metadata"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "page",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "New page number"
                        },
                        {
                            "name": "pageCount",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Total page count"
                        },
                        {
                            "name": "rows",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display in new page"
                        },
                        {
                            "name": "sortField",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableSortFieldType",
                            "default": "",
                            "description": "Field to sort against"
                        },
                        {
                            "name": "sortOrder",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableSortOrderType",
                            "default": "",
                            "description": "Sort order as integer"
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "TreeTableSortEvent"
                },
                "TreeTableProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "alwaysShowPaginator",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show it even there is only one page.\nDefault value is true."
                        },
                        {
                            "name": "autoLayout",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the cell widths scale according to their content or not."
                        },
                        {
                            "name": "columnResizeMode",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableColumnResizeModeType",
                            "default": "",
                            "description": "Defines whether the overall table width should change on column resize."
                        },
                        {
                            "name": "currentPageReportTemplate",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Template of the current page report element. It displays information about the pagination state. Default value is ({currentPage} of {totalPages}) whereas available placeholders are the following;\n\n- {currentPage}\n- {totalPages}\n- {rows}\n- {first}\n- {last}\n- {totalRecords}"
                        },
                        {
                            "name": "defaultSortOrder",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Default sort order of an unsorted column.\nDefault value is 1."
                        },
                        {
                            "name": "expandedKeys",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableExpandedKeys",
                            "default": "",
                            "description": "A map of keys to represent the state of the tree expansion state in controlled mode."
                        },
                        {
                            "name": "filterLocale",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Locale to use in filtering. The default locale is the host environment's current locale."
                        },
                        {
                            "name": "filterMode",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableFilterModeType",
                            "default": "",
                            "description": "Mode for filtering."
                        },
                        {
                            "name": "filters",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableFilterMeta",
                            "default": "",
                            "description": "Filters object with key-value pairs to define the filters."
                        },
                        {
                            "name": "first",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of the first row to be displayed.\nDefault value is 0."
                        },
                        {
                            "name": "indentation",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Indentation factor as rem value for children nodes.\nDefault value is 1."
                        },
                        {
                            "name": "lazy",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if data is loaded and interacted with in lazy manner."
                        },
                        {
                            "name": "loading",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Displays a loader to indicate data load is in progress."
                        },
                        {
                            "name": "loadingIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "The icon to show while indicating data load is in progress.\nDefault value is 'pi pi-spinner'."
                        },
                        {
                            "name": "metaKeySelection",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually.\nOn touch enabled devices, metaKeySelection is turned off automatically.\nDefault value is true."
                        },
                        {
                            "name": "multiSortMeta",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableMultiSortMetaType",
                            "default": "",
                            "description": "An array of SortMeta objects to sort the data by default in multiple sort mode."
                        },
                        {
                            "name": "pageLinkSize",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of page links to display.\nDefault value is 5."
                        },
                        {
                            "name": "paginator",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified as true, enables the pagination."
                        },
                        {
                            "name": "paginatorPosition",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTablePaginatorPositionType",
                            "default": "",
                            "description": "Position of the paginator, options are 'top','bottom' or 'both'."
                        },
                        {
                            "name": "paginatorTemplate",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Template of the paginator. It can be customized using the template property using the predefined keys, default value is 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown'. Here are the available elements that can be placed inside a paginator in any order.\n\n- FirstPageLink\n- PrevPageLink\n- PageLinks\n- NextPageLink\n- LastPageLink\n- RowsPerPageDropdown\n- JumpToPageDropdown\n- JumpToPageInput\n- CurrentPageReport"
                        },
                        {
                            "name": "removableSort",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, columns can have an un-sorted state."
                        },
                        {
                            "name": "resizableColumns",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, columns can be resized using drag and drop."
                        },
                        {
                            "name": "responsiveLayout",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableResponsiveLayoutType",
                            "default": "",
                            "description": "Defines the responsive mode, currently only option is scroll."
                        },
                        {
                            "name": "rowHover",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When enabled, background of the rows change on hover."
                        },
                        {
                            "name": "rows",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display per page."
                        },
                        {
                            "name": "rowsPerPageOptions",
                            "optional": true,
                            "readonly": false,
                            "type": "number[]",
                            "default": "",
                            "description": "Array of integer values to display inside rows per page dropdown."
                        },
                        {
                            "name": "scrollDirection",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableScrollDirectionType",
                            "default": "",
                            "description": "Orientation of the scrolling."
                        },
                        {
                            "name": "scrollHeight",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableScrollHeightType",
                            "default": "",
                            "description": "Height of the scroll viewport in fixed pixels or the 'flex' keyword for a dynamic size."
                        },
                        {
                            "name": "scrollable",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When specified, enables horizontal and/or vertical scrolling."
                        },
                        {
                            "name": "selectionKeys",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableSelectionKeys",
                            "default": "",
                            "description": "A map of keys to control the selection state."
                        },
                        {
                            "name": "selectionMode",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableSelectionModeType",
                            "default": "",
                            "description": "Defines the selection mode."
                        },
                        {
                            "name": "showGridlines",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show grid lines between cells."
                        },
                        {
                            "name": "sortField",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableSortFieldType",
                            "default": "",
                            "description": "Property name or a getter function of a row data used for sorting by default."
                        },
                        {
                            "name": "sortMode",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeTableSortModeType",
                            "default": "",
                            "description": "Defines whether sorting works on single column or on multiple columns."
                        },
                        {
                            "name": "sortOrder",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Order to sort the data by default."
                        },
                        {
                            "name": "tableProps",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Props to pass to the table element."
                        },
                        {
                            "name": "totalRecords",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of total records, defaults to length of value when not defined."
                        },
                        {
                            "name": "value",
                            "optional": true,
                            "readonly": false,
                            "type": "TreeNode[]",
                            "default": "",
                            "description": "An array of treenodes."
                        }
                    ],
                    "methods": []
                },
                "TreeTableSelectionKeys": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "TreeTableSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "empty",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "footer",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "header",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "paginatorend",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "paginatorstart",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "TreeTableSortEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "filterMatchModes",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableFilterMatchModeType",
                            "default": "",
                            "description": "Match modes per field"
                        },
                        {
                            "name": "filters",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableFilterMeta",
                            "default": "",
                            "description": "Collection of active filters"
                        },
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Index of first record"
                        },
                        {
                            "name": "multiSortMeta",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableMultiSortMetaType",
                            "default": "",
                            "description": "MultiSort metadata"
                        },
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "Event",
                            "default": "",
                            "description": "Browser event."
                        },
                        {
                            "name": "rows",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Number of rows to display in new page"
                        },
                        {
                            "name": "sortField",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableSortFieldType",
                            "default": "",
                            "description": "Field to sort against"
                        },
                        {
                            "name": "sortOrder",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableSortOrderType",
                            "default": "",
                            "description": "Sort order as integer"
                        }
                    ],
                    "methods": [],
                    "extendedBy": "TreeTablePageEvent,TreeTableFilterEvent"
                },
                "TreeTableSortMeta": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "field",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Column field"
                        },
                        {
                            "name": "order",
                            "optional": false,
                            "readonly": false,
                            "type": "TreeTableSortOrderType",
                            "default": "",
                            "description": "Column sort order"
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TreeTableEmits": {
                    "values": "{\n    \"column-resize-end\": \"Function, \",\n    \"filter\": \"Function, \",\n    \"node-collapse\": \"Function, \",\n    \"node-expand\": \"Function, \",\n    \"node-select\": \"Function, \",\n    \"node-unselect\": \"Function, \",\n    \"page\": \"Function, \",\n    \"sort\": \"Function, \",\n    \"update:expandedKeys\": \"Function, \",\n    \"update:first\": \"Function, \",\n    \"update:multiSortMeta\": \"Function, \",\n    \"update:rows\": \"Function, \",\n    \"update:selectionKeys\": \"Function, \",\n    \"update:sortField\": \"Function, \",\n    \"update:sortOrder\": \"Function, \"\n}"
                }
            }
        }
    },
    "tristatecheckbox/TriStateCheckbox": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "TriStateCheckboxProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "aria-label",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes a string value that labels the component."
                        },
                        {
                            "name": "aria-labelledby",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "When present, it specifies that the component should be disabled."
                        },
                        {
                            "name": "inputId",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Identifier of the underlying input element."
                        },
                        {
                            "name": "inputProps",
                            "optional": true,
                            "readonly": false,
                            "type": "InputHTMLAttributes",
                            "default": "",
                            "description": "Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component."
                        },
                        {
                            "name": "modelValue",
                            "optional": true,
                            "readonly": false,
                            "type": "Nullable<boolean>",
                            "default": "",
                            "description": "Value of the component."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Index of the element in tabbing order."
                        }
                    ],
                    "methods": []
                },
                "TriStateCheckboxSlots": {
                    "relatedProp": "",
                    "props": [],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "TriStateCheckboxEmits": {
                    "values": "{\n    \"update:modelValue\": \"Function, \"\n}"
                }
            }
        }
    },
    "ts-helpers": {
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "Booleanish": {
                    "values": "boolean | \"true\" | \"false\"",
                    "description": "Custom types"
                },
                "EmitFn": {
                    "values": "Options extends (infer V)[] ? Function : Object extends Options ? Function : UnionToIntersection<{ [key in Event]: Options[key] extends Function ? Function : Function }[Event]>"
                },
                "GlobalComponentConstructor": {
                    "values": "{}"
                },
                "Nullable": {
                    "values": "T | null | undefined"
                },
                "Numberish": {
                    "values": "number | string"
                },
                "PublicProps": {
                    "values": "VNodeProps & AllowedComponentProps & ComponentCustomProps"
                },
                "UnionToIntersection": {
                    "values": "(U extends any ? Function : never) extends Function ? I : never"
                }
            }
        }
    },
    "useconfirm/UseConfirm": {
        "functions": {
            "description": "Defines the custom functions used by the module.",
            "values": {
                "useConfirm": {
                    "name": "useConfirm",
                    "parameters": [],
                    "returnType": "Object"
                }
            }
        }
    },
    "usedialog/UseDialog": {
        "functions": {
            "description": "Defines the custom functions used by the module.",
            "values": {
                "useDialog": {
                    "name": "useDialog",
                    "parameters": [],
                    "returnType": "Object"
                }
            }
        }
    },
    "usetoast/UseToast": {
        "functions": {
            "description": "Defines the custom functions used by the module.",
            "values": {
                "useToast": {
                    "name": "useToast",
                    "parameters": [],
                    "returnType": "ToastServiceMethods"
                }
            }
        }
    },
    "utils/Utils": {
        "functions": {
            "description": "Defines the custom functions used by the module.",
            "values": {
                "EventBus": {
                    "name": "EventBus",
                    "parameters": [],
                    "returnType": "Object"
                },
                "UniqueComponentId": {
                    "name": "UniqueComponentId",
                    "parameters": [
                        {
                            "name": "prefix",
                            "type": "string"
                        }
                    ],
                    "returnType": "string"
                }
            }
        }
    },
    "virtualscroller/VirtualScroller": {
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "values": {
                "VirtualScrollerItemOptions": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "count",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Items count"
                        },
                        {
                            "name": "even",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is even."
                        },
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is first."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Item index"
                        },
                        {
                            "name": "last",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is last."
                        },
                        {
                            "name": "odd",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is odd."
                        },
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": [],
                    "extendedBy": "VirtualScrollerLoaderOptions"
                },
                "VirtualScrollerLazyEvent": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "First index of the new data range to be loaded."
                        },
                        {
                            "name": "last",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Last index of the new data range to be loaded."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "VirtualScrollerScrollIndexChangeEvent"
                },
                "VirtualScrollerLoaderOptions": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "count",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Items count"
                        },
                        {
                            "name": "even",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is even."
                        },
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is first."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Item index"
                        },
                        {
                            "name": "last",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is last."
                        },
                        {
                            "name": "odd",
                            "optional": false,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether the item is odd."
                        }
                    ],
                    "methods": [],
                    "extendedBy": "ColumnLoadingOptions",
                    "extendedTypes": "VirtualScrollerItemOptions"
                },
                "VirtualScrollerProps": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "class",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Style class of the component."
                        },
                        {
                            "name": "delay",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Delay in scroll before new data is loaded.\nDefault value is 0."
                        },
                        {
                            "name": "disabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "If disabled, the VirtualScroller feature is eliminated and the content is displayed directly."
                        },
                        {
                            "name": "id",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Unique identifier of the element."
                        },
                        {
                            "name": "itemSize",
                            "optional": true,
                            "readonly": false,
                            "type": "VirtualScrollerItemSizeType",
                            "default": "",
                            "description": "The height/width of item according to orientation."
                        },
                        {
                            "name": "items",
                            "optional": true,
                            "readonly": false,
                            "type": "VirtualScrollerItemsType",
                            "default": "",
                            "description": "An array of objects to display."
                        },
                        {
                            "name": "lazy",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Defines if data is loaded and interacted with in lazy manner."
                        },
                        {
                            "name": "loaderDisabled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Used to implement a custom loader instead of using the loader feature in the VirtualScroller."
                        },
                        {
                            "name": "loading",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to load items."
                        },
                        {
                            "name": "numToleratedItems",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Determines how many additional elements to add to the DOM outside of the view.\nAccording to the scrolls made up and down, extra items are added in a certain algorithm in the form of multiples of this number.\nDefault value is half the number of items shown in the view."
                        },
                        {
                            "name": "onLazyLoad",
                            "optional": true,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "orientation",
                            "optional": true,
                            "readonly": false,
                            "type": "VirtualScrollerOrientationType",
                            "default": "",
                            "description": "The orientation of scrollbar."
                        },
                        {
                            "name": "scrollHeight",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Height of the scroll viewport."
                        },
                        {
                            "name": "scrollWidth",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Width of the scroll viewport."
                        },
                        {
                            "name": "showLoader",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Whether to show loader."
                        },
                        {
                            "name": "showSpacer",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "",
                            "description": "Used to implement a custom spacer instead of using the spacer feature in the VirtualScroller.\nDefault value is true."
                        },
                        {
                            "name": "style",
                            "optional": true,
                            "readonly": false,
                            "type": "any",
                            "default": "",
                            "description": "Inline style of the component."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "string | number",
                            "default": "",
                            "description": "Index of the element in tabbing order.\nDefault value is 0."
                        }
                    ],
                    "methods": []
                },
                "VirtualScrollerRangeMethod": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Whether the item is first."
                        },
                        {
                            "name": "last",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Whether the item is last."
                        },
                        {
                            "name": "viewport",
                            "optional": false,
                            "readonly": false,
                            "type": "VirtualScrollerViewport",
                            "default": "",
                            "description": "Viewport info."
                        }
                    ],
                    "methods": []
                },
                "VirtualScrollerScrollIndexChangeEvent": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "First index of the new data range to be loaded."
                        },
                        {
                            "name": "last",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Last index of the new data range to be loaded."
                        }
                    ],
                    "methods": [],
                    "extendedBy": "VirtualScrollerLazyEvent,VirtualScrollerViewport"
                },
                "VirtualScrollerSlots": {
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "content",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "item",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        },
                        {
                            "name": "loader",
                            "optional": false,
                            "readonly": false,
                            "type": "Function",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "VirtualScrollerViewport": {
                    "description": "",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "first",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "First index of the new data range to be loaded."
                        },
                        {
                            "name": "last",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Last index of the new data range to be loaded."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "VirtualScrollerScrollIndexChangeEvent"
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "VirtualScrollerEmits": {
                    "values": "{\n    \"lazy-load\": \"Function, \",\n    \"scroll\": \"Function, \",\n    \"scroll-index-change\": \"Function, \",\n    \"update:numToleratedItems\": \"Function, \"\n}"
                }
            }
        }
    }
}